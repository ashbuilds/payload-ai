{"version":3,"sources":["../../../src/fields/LexicalEditor/ComposeFeatureComponent.tsx"],"sourcesContent":["import React from 'react'\n\nimport { FieldProvider } from '../../providers/FieldProvider/FieldProvider.js'\nimport { useInstructions } from '../../providers/InstructionsProvider/useInstructions.js'\nimport { Compose } from '../../ui/Compose/Compose.js'\n\nexport const ComposeFeatureComponent = (props: any) => {\n  const {\n    id: instructionId,\n    disabled,\n    isConfigAllowed,\n  } = useInstructions({\n    schemaPath: props?.clientProps?.schemaPath,\n  })\n\n  if (!instructionId || disabled) {\n    return null\n  }\n\n  return (\n    <FieldProvider\n      context={{\n        type: props?.clientProps?.field?.type,\n        path: props?.clientProps?.path,\n        schemaPath: props?.clientProps?.schemaPath,\n      }}\n    >\n      <Compose\n        descriptionProps={{\n          field: props?.clientProps?.field,\n          path: props?.clientProps?.path,\n          schemaPath: props?.clientProps?.schemaPath,\n          ...props?.clientProps,\n        }}\n        instructionId={instructionId}\n        isConfigAllowed={isConfigAllowed}\n      />\n    </FieldProvider>\n  )\n}\n"],"names":["React","FieldProvider","useInstructions","Compose","ComposeFeatureComponent","props","id","instructionId","disabled","isConfigAllowed","schemaPath","clientProps","context","type","field","path","descriptionProps"],"mappings":";AAAA,OAAOA,WAAW,QAAO;AAEzB,SAASC,aAAa,QAAQ,iDAAgD;AAC9E,SAASC,eAAe,QAAQ,0DAAyD;AACzF,SAASC,OAAO,QAAQ,8BAA6B;AAErD,OAAO,MAAMC,0BAA0B,CAACC;IACtC,MAAM,EACJC,IAAIC,aAAa,EACjBC,QAAQ,EACRC,eAAe,EAChB,GAAGP,gBAAgB;QAClBQ,YAAYL,OAAOM,aAAaD;IAClC;IAEA,IAAI,CAACH,iBAAiBC,UAAU;QAC9B,OAAO;IACT;IAEA,qBACE,KAACP;QACCW,SAAS;YACPC,MAAMR,OAAOM,aAAaG,OAAOD;YACjCE,MAAMV,OAAOM,aAAaI;YAC1BL,YAAYL,OAAOM,aAAaD;QAClC;kBAEA,cAAA,KAACP;YACCa,kBAAkB;gBAChBF,OAAOT,OAAOM,aAAaG;gBAC3BC,MAAMV,OAAOM,aAAaI;gBAC1BL,YAAYL,OAAOM,aAAaD;gBAChC,GAAGL,OAAOM,WAAW;YACvB;YACAJ,eAAeA;YACfE,iBAAiBA;;;AAIzB,EAAC"}