{"version":3,"sources":["../../../../src/ai/models/elevenLabs/index.ts"],"sourcesContent":["import type { File } from 'payload'\n\nimport type { GenerationConfig } from '../../../types.js'\n\nimport { PromptTextareaField } from '../../../fields/PromptTextareaField/TextareaField.js'\nimport { SelectField } from '../../../fields/SelectField/SelectField.js'\nimport { generateFileNameByPrompt } from '../../utils/generateFileNameByPrompt.js'\nimport { generateVoice } from './generateVoice.js'\nimport { getAllVoices } from './voices.js'\n\n//TODO: Add prompt optimisation for ElevenLabs models\n\nconst { voices = [] } = {\n  voices: [\n    {\n      name: 'en-US-Wavenet-A',\n      language_code: 'en-US',\n      voice_id: 'en-US-Wavenet-A',\n    },\n  ],\n} // await getAllVoices()\n\nconst voiceOptions = voices.map((voice) => {\n  return {\n    label: voice.name,\n    value: voice.voice_id,\n    ...voice,\n  }\n})\n\nexport const ElevenLabsConfig: GenerationConfig = {\n  models: [\n    {\n      id: 'elevenlabs/multilingual-v2',\n      name: 'ElevenLabs Multilingual v2',\n      fields: ['upload'],\n      handler: async (text: string, options) => {\n        const voiceData = await generateVoice(text, options)\n        return {\n          data: {\n            // alt: text.alt,\n          },\n          file: {\n            name: `voice_${generateFileNameByPrompt(text)}.mp3`,\n            data: voiceData.buffer,\n            mimetype: 'audio/mp3',\n            size: voiceData.buffer.byteLength,\n          } as File,\n        }\n      },\n      output: 'audio',\n      settings: {\n        name: 'elevenlabs-multilingual-v2-settings',\n        type: 'group',\n        admin: {\n          condition: (data) => {\n            return data['model-id'] === 'elevenlabs/multilingual-v2'\n          },\n        },\n        fields: [\n          {\n            name: 'voice_id',\n            type: 'select',\n            admin: {\n              components: {\n                Field: SelectField,\n              },\n              custom: {\n                options: voiceOptions,\n              },\n            },\n            defaultValue: voiceOptions[0].voice_id,\n            label: 'Voice',\n            options: voiceOptions.map((option) => {\n              return {\n                label: option.name,\n                value: option.voice_id,\n              }\n            }),\n            required: true,\n            validate: () => true,\n          },\n          {\n            type: 'collapsible',\n            admin: {\n              initCollapsed: false,\n            },\n            fields: [\n              {\n                name: 'stability',\n                type: 'number',\n                defaultValue: 0.5,\n                label: 'Stability',\n                max: 1,\n                min: 0,\n                required: true,\n              },\n              {\n                name: 'similarity_boost',\n                type: 'number',\n                defaultValue: 0.5,\n                label: 'Similarity Boost',\n                max: 1,\n                min: 0,\n                required: true,\n              },\n              {\n                name: 'style',\n                type: 'number',\n                defaultValue: 0.5,\n                label: 'Style',\n                max: 1,\n                min: 0,\n              },\n              {\n                name: 'use_speaker_boost',\n                type: 'checkbox',\n                label: 'Use Speaker Boost',\n              },\n            ],\n            label: 'Voice Settings',\n          },\n          {\n            name: 'seed',\n            type: 'number',\n            label: 'Seed',\n          },\n          {\n            type: 'row',\n            fields: [\n              {\n                name: 'previous_text',\n                type: 'textarea',\n                // admin: {\n                //   components: {\n                //     Field: PromptTextareaField,\n                //   },\n                // },\n                label: 'Previous Text',\n              },\n              {\n                name: 'next_text',\n                type: 'textarea',\n                // admin: {\n                //   components: {\n                //     Field: PromptTextareaField,\n                //   },\n                // },\n                label: 'Next Text',\n              },\n            ],\n          },\n        ],\n        label: 'ElevenLabs Multilingual v2 Settings',\n      },\n    },\n  ],\n  provider: 'ElevenLabs',\n}\n"],"names":["SelectField","generateFileNameByPrompt","generateVoice","voices","name","language_code","voice_id","voiceOptions","map","voice","label","value","ElevenLabsConfig","models","id","fields","handler","text","options","voiceData","data","file","buffer","mimetype","size","byteLength","output","settings","type","admin","condition","components","Field","custom","defaultValue","option","required","validate","initCollapsed","max","min","provider"],"mappings":"AAKA,SAASA,WAAW,QAAQ,6CAA4C;AACxE,SAASC,wBAAwB,QAAQ,0CAAyC;AAClF,SAASC,aAAa,QAAQ,qBAAoB;AAGlD,qDAAqD;AAErD,MAAM,EAAEC,SAAS,EAAE,EAAE,GAAG;IACtBA,QAAQ;QACN;YACEC,MAAM;YACNC,eAAe;YACfC,UAAU;QACZ;KACD;AACH,EAAE,uBAAuB;;AAEzB,MAAMC,eAAeJ,OAAOK,GAAG,CAAC,CAACC;IAC/B,OAAO;QACLC,OAAOD,MAAML,IAAI;QACjBO,OAAOF,MAAMH,QAAQ;QACrB,GAAGG,KAAK;IACV;AACF;AAEA,OAAO,MAAMG,mBAAqC;IAChDC,QAAQ;QACN;YACEC,IAAI;YACJV,MAAM;YACNW,QAAQ;gBAAC;aAAS;YAClBC,SAAS,OAAOC,MAAcC;gBAC5B,MAAMC,YAAY,MAAMjB,cAAce,MAAMC;gBAC5C,OAAO;oBACLE,MAAM;oBAEN;oBACAC,MAAM;wBACJjB,MAAM,CAAC,MAAM,EAAEH,yBAAyBgB,MAAM,IAAI,CAAC;wBACnDG,MAAMD,UAAUG,MAAM;wBACtBC,UAAU;wBACVC,MAAML,UAAUG,MAAM,CAACG,UAAU;oBACnC;gBACF;YACF;YACAC,QAAQ;YACRC,UAAU;gBACRvB,MAAM;gBACNwB,MAAM;gBACNC,OAAO;oBACLC,WAAW,CAACV;wBACV,OAAOA,IAAI,CAAC,WAAW,KAAK;oBAC9B;gBACF;gBACAL,QAAQ;oBACN;wBACEX,MAAM;wBACNwB,MAAM;wBACNC,OAAO;4BACLE,YAAY;gCACVC,OAAOhC;4BACT;4BACAiC,QAAQ;gCACNf,SAASX;4BACX;wBACF;wBACA2B,cAAc3B,YAAY,CAAC,EAAE,CAACD,QAAQ;wBACtCI,OAAO;wBACPQ,SAASX,aAAaC,GAAG,CAAC,CAAC2B;4BACzB,OAAO;gCACLzB,OAAOyB,OAAO/B,IAAI;gCAClBO,OAAOwB,OAAO7B,QAAQ;4BACxB;wBACF;wBACA8B,UAAU;wBACVC,UAAU,IAAM;oBAClB;oBACA;wBACET,MAAM;wBACNC,OAAO;4BACLS,eAAe;wBACjB;wBACAvB,QAAQ;4BACN;gCACEX,MAAM;gCACNwB,MAAM;gCACNM,cAAc;gCACdxB,OAAO;gCACP6B,KAAK;gCACLC,KAAK;gCACLJ,UAAU;4BACZ;4BACA;gCACEhC,MAAM;gCACNwB,MAAM;gCACNM,cAAc;gCACdxB,OAAO;gCACP6B,KAAK;gCACLC,KAAK;gCACLJ,UAAU;4BACZ;4BACA;gCACEhC,MAAM;gCACNwB,MAAM;gCACNM,cAAc;gCACdxB,OAAO;gCACP6B,KAAK;gCACLC,KAAK;4BACP;4BACA;gCACEpC,MAAM;gCACNwB,MAAM;gCACNlB,OAAO;4BACT;yBACD;wBACDA,OAAO;oBACT;oBACA;wBACEN,MAAM;wBACNwB,MAAM;wBACNlB,OAAO;oBACT;oBACA;wBACEkB,MAAM;wBACNb,QAAQ;4BACN;gCACEX,MAAM;gCACNwB,MAAM;gCACN,WAAW;gCACX,kBAAkB;gCAClB,kCAAkC;gCAClC,OAAO;gCACP,KAAK;gCACLlB,OAAO;4BACT;4BACA;gCACEN,MAAM;gCACNwB,MAAM;gCACN,WAAW;gCACX,kBAAkB;gCAClB,kCAAkC;gCAClC,OAAO;gCACP,KAAK;gCACLlB,OAAO;4BACT;yBACD;oBACH;iBACD;gBACDA,OAAO;YACT;QACF;KACD;IACD+B,UAAU;AACZ,EAAC"}