{"version":3,"sources":["../../../../src/ai/models/openai/generateVoice.ts"],"sourcesContent":["import type { SpeechCreateParams } from 'openai/resources/audio/speech'\n\nimport OpenAI from 'openai'\n\ntype OpenAITextToSpeechOptions = Exclude<SpeechCreateParams, 'input'>\n\nexport const generateVoice = async (text: string, options: OpenAITextToSpeechOptions) => {\n  const openai = new OpenAI()\n  const mp3 = await openai.audio.speech.create({\n    input: text,\n    model: options.model,\n    response_format: options.response_format,\n    speed: options.speed,\n    voice: options.voice,\n  })\n\n  if (mp3.ok) {\n    const audioBuffer = Buffer.from(await mp3.arrayBuffer())\n\n    return {\n      buffer: audioBuffer,\n    }\n  }\n}\n"],"names":["OpenAI","generateVoice","text","options","openai","mp3","audio","speech","create","input","model","response_format","speed","voice","ok","audioBuffer","Buffer","from","arrayBuffer","buffer"],"mappings":"AAEA,OAAOA,YAAY,SAAQ;AAI3B,OAAO,MAAMC,gBAAgB,OAAOC,MAAcC;IAChD,MAAMC,SAAS,IAAIJ;IACnB,MAAMK,MAAM,MAAMD,OAAOE,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC;QAC3CC,OAAOP;QACPQ,OAAOP,QAAQO,KAAK;QACpBC,iBAAiBR,QAAQQ,eAAe;QACxCC,OAAOT,QAAQS,KAAK;QACpBC,OAAOV,QAAQU,KAAK;IACtB;IAEA,IAAIR,IAAIS,EAAE,EAAE;QACV,MAAMC,cAAcC,OAAOC,IAAI,CAAC,MAAMZ,IAAIa,WAAW;QAErD,OAAO;YACLC,QAAQJ;QACV;IACF;AACF,EAAC"}