{"version":3,"sources":["../src/init.ts"],"sourcesContent":["import type { Payload } from 'payload'\n\nimport { PLUGIN_INSTRUCTIONS_MAP_GLOBAL, PLUGIN_INSTRUCTIONS_TABLE } from './defaults.js'\n\nexport const init = async (payload: Payload, fieldSchemaPaths) => {\n  payload.logger.info(`— AI Plugin: Initializing...`)\n\n  const paths = Object.keys(fieldSchemaPaths)\n\n  const fieldInstructionsMap = {}\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i]\n    const fieldType = fieldSchemaPaths[path]\n    const entry = await payload.find({\n      collection: PLUGIN_INSTRUCTIONS_TABLE,\n      where: {\n        'field-type': {\n          equals: fieldType,\n        },\n        'schema-path': {\n          equals: path,\n        },\n      },\n    })\n\n    if (!entry?.docs?.length) {\n      const instructions = await payload.create({\n        collection: PLUGIN_INSTRUCTIONS_TABLE,\n        data: {\n          'field-type': fieldType,\n          'schema-path': path,\n        },\n      })\n      fieldInstructionsMap[path] = instructions.id\n    } else {\n      const [instructions] = entry.docs\n      fieldInstructionsMap[path] = instructions.id\n    }\n  }\n\n  payload.logger.info(\n    `— AI Plugin: Enabled fieldMap: ${JSON.stringify(fieldInstructionsMap, null, 2)}`,\n  )\n  await payload.updateGlobal({\n    slug: PLUGIN_INSTRUCTIONS_MAP_GLOBAL, // required\n    data: {\n      map: fieldInstructionsMap,\n    },\n    depth: 2,\n  })\n\n  payload.logger.info(`— AI Plugin: Initialized!`)\n}\n"],"names":["PLUGIN_INSTRUCTIONS_MAP_GLOBAL","PLUGIN_INSTRUCTIONS_TABLE","init","payload","fieldSchemaPaths","logger","info","paths","Object","keys","fieldInstructionsMap","i","length","path","fieldType","entry","find","collection","where","equals","docs","instructions","create","data","id","JSON","stringify","updateGlobal","slug","map","depth"],"mappings":"AAEA,SAASA,8BAA8B,EAAEC,yBAAyB,QAAQ,gBAAe;AAEzF,OAAO,MAAMC,OAAO,OAAOC,SAAkBC;IAC3CD,QAAQE,MAAM,CAACC,IAAI,CAAC,CAAC,4BAA4B,CAAC;IAElD,MAAMC,QAAQC,OAAOC,IAAI,CAACL;IAE1B,MAAMM,uBAAuB,CAAC;IAC9B,IAAK,IAAIC,IAAI,GAAGA,IAAIJ,MAAMK,MAAM,EAAED,IAAK;QACrC,MAAME,OAAON,KAAK,CAACI,EAAE;QACrB,MAAMG,YAAYV,gBAAgB,CAACS,KAAK;QACxC,MAAME,QAAQ,MAAMZ,QAAQa,IAAI,CAAC;YAC/BC,YAAYhB;YACZiB,OAAO;gBACL,cAAc;oBACZC,QAAQL;gBACV;gBACA,eAAe;oBACbK,QAAQN;gBACV;YACF;QACF;QAEA,IAAI,CAACE,OAAOK,MAAMR,QAAQ;YACxB,MAAMS,eAAe,MAAMlB,QAAQmB,MAAM,CAAC;gBACxCL,YAAYhB;gBACZsB,MAAM;oBACJ,cAAcT;oBACd,eAAeD;gBACjB;YACF;YACAH,oBAAoB,CAACG,KAAK,GAAGQ,aAAaG,EAAE;QAC9C,OAAO;YACL,MAAM,CAACH,aAAa,GAAGN,MAAMK,IAAI;YACjCV,oBAAoB,CAACG,KAAK,GAAGQ,aAAaG,EAAE;QAC9C;IACF;IAEArB,QAAQE,MAAM,CAACC,IAAI,CACjB,CAAC,+BAA+B,EAAEmB,KAAKC,SAAS,CAAChB,sBAAsB,MAAM,GAAG,CAAC;IAEnF,MAAMP,QAAQwB,YAAY,CAAC;QACzBC,MAAM5B;QACNuB,MAAM;YACJM,KAAKnB;QACP;QACAoB,OAAO;IACT;IAEA3B,QAAQE,MAAM,CAACC,IAAI,CAAC,CAAC,yBAAyB,CAAC;AACjD,EAAC"}