{"version":3,"sources":["../src/init.ts"],"sourcesContent":["import type { Payload } from 'payload'\n\nimport { PLUGIN_INSTRUCTIONS_MAP_GLOBAL, PLUGIN_INSTRUCTIONS_TABLE } from './defaults.js'\nimport { GenerationModels } from './ai/models/index.js'\nimport { generateSeedPrompt } from './ai/utils/generateSeedPrompt.js'\nimport { seedPrompts } from './ai/prompts.js'\n\nexport const init = async (payload: Payload, fieldSchemaPaths) => {\n  payload.logger.info(`â€” AI Plugin: Initializing...`)\n\n  const paths = Object.keys(fieldSchemaPaths)\n\n  // TODO: Add default options according to field type in INSTRUCTIONS table\n  const fieldInstructionsMap = {}\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i]\n    const { type: fieldType, label: fieldLabel } = fieldSchemaPaths[path]\n    const entry = await payload.find({\n      collection: PLUGIN_INSTRUCTIONS_TABLE,\n      where: {\n        'field-type': {\n          equals: fieldType,\n        },\n        'schema-path': {\n          equals: path,\n        },\n      },\n    })\n\n    if (!entry?.docs?.length) {\n      const { system, prompt } = seedPrompts({\n        fieldType,\n        fieldLabel,\n        path,\n        fieldSchemaPaths,\n      })\n      const generatedPrompt = await generateSeedPrompt({\n        system,\n        prompt,\n      })\n      payload.logger.info(\n        `\\nPrompt generated for \"${fieldLabel}\" field:\\nprompt: ${generatedPrompt}\\n\\n`,\n      )\n      const instructions = await payload.create({\n        collection: PLUGIN_INSTRUCTIONS_TABLE,\n        data: {\n          'field-type': fieldType,\n          'schema-path': path,\n          'model-id': GenerationModels.find((a) => {\n            return a.fields.includes(fieldType)\n          }).id,\n          prompt: generatedPrompt,\n        },\n      })\n      fieldInstructionsMap[path] = instructions.id\n    } else {\n      const [instructions] = entry.docs\n      fieldInstructionsMap[path] = instructions.id\n    }\n  }\n\n  payload.logger.info(\n    `â€” AI Plugin: Enabled fieldMap: ${JSON.stringify(fieldInstructionsMap, null, 2)}`,\n  )\n  await payload.updateGlobal({\n    slug: PLUGIN_INSTRUCTIONS_MAP_GLOBAL, // required\n    data: {\n      map: fieldInstructionsMap,\n    },\n    depth: 2,\n  })\n\n  payload.logger.info(`â€” AI Plugin: Initialized!`)\n  payload.logger.info(\n    '\\n\\n-AI Plugin: Example prompts are added to get you started, Now go break some code ðŸš€ðŸš€ðŸš€\\n\\n',\n  )\n}\n"],"names":["PLUGIN_INSTRUCTIONS_MAP_GLOBAL","PLUGIN_INSTRUCTIONS_TABLE","GenerationModels","generateSeedPrompt","seedPrompts","init","payload","fieldSchemaPaths","logger","info","paths","Object","keys","fieldInstructionsMap","i","length","path","type","fieldType","label","fieldLabel","entry","find","collection","where","equals","docs","system","prompt","generatedPrompt","instructions","create","data","a","fields","includes","id","JSON","stringify","updateGlobal","slug","map","depth"],"mappings":"AAEA,SAASA,8BAA8B,EAAEC,yBAAyB,QAAQ,gBAAe;AACzF,SAASC,gBAAgB,QAAQ,uBAAsB;AACvD,SAASC,kBAAkB,QAAQ,mCAAkC;AACrE,SAASC,WAAW,QAAQ,kBAAiB;AAE7C,OAAO,MAAMC,OAAO,OAAOC,SAAkBC;IAC3CD,QAAQE,MAAM,CAACC,IAAI,CAAC,CAAC,4BAA4B,CAAC;IAElD,MAAMC,QAAQC,OAAOC,IAAI,CAACL;IAE1B,0EAA0E;IAC1E,MAAMM,uBAAuB,CAAC;IAC9B,IAAK,IAAIC,IAAI,GAAGA,IAAIJ,MAAMK,MAAM,EAAED,IAAK;QACrC,MAAME,OAAON,KAAK,CAACI,EAAE;QACrB,MAAM,EAAEG,MAAMC,SAAS,EAAEC,OAAOC,UAAU,EAAE,GAAGb,gBAAgB,CAACS,KAAK;QACrE,MAAMK,QAAQ,MAAMf,QAAQgB,IAAI,CAAC;YAC/BC,YAAYtB;YACZuB,OAAO;gBACL,cAAc;oBACZC,QAAQP;gBACV;gBACA,eAAe;oBACbO,QAAQT;gBACV;YACF;QACF;QAEA,IAAI,CAACK,OAAOK,MAAMX,QAAQ;YACxB,MAAM,EAAEY,MAAM,EAAEC,MAAM,EAAE,GAAGxB,YAAY;gBACrCc;gBACAE;gBACAJ;gBACAT;YACF;YACA,MAAMsB,kBAAkB,MAAM1B,mBAAmB;gBAC/CwB;gBACAC;YACF;YACAtB,QAAQE,MAAM,CAACC,IAAI,CACjB,CAAC,wBAAwB,EAAEW,WAAW,kBAAkB,EAAES,gBAAgB,IAAI,CAAC;YAEjF,MAAMC,eAAe,MAAMxB,QAAQyB,MAAM,CAAC;gBACxCR,YAAYtB;gBACZ+B,MAAM;oBACJ,cAAcd;oBACd,eAAeF;oBACf,YAAYd,iBAAiBoB,IAAI,CAAC,CAACW;wBACjC,OAAOA,EAAEC,MAAM,CAACC,QAAQ,CAACjB;oBAC3B,GAAGkB,EAAE;oBACLR,QAAQC;gBACV;YACF;YACAhB,oBAAoB,CAACG,KAAK,GAAGc,aAAaM,EAAE;QAC9C,OAAO;YACL,MAAM,CAACN,aAAa,GAAGT,MAAMK,IAAI;YACjCb,oBAAoB,CAACG,KAAK,GAAGc,aAAaM,EAAE;QAC9C;IACF;IAEA9B,QAAQE,MAAM,CAACC,IAAI,CACjB,CAAC,+BAA+B,EAAE4B,KAAKC,SAAS,CAACzB,sBAAsB,MAAM,GAAG,CAAC;IAEnF,MAAMP,QAAQiC,YAAY,CAAC;QACzBC,MAAMxC;QACNgC,MAAM;YACJS,KAAK5B;QACP;QACA6B,OAAO;IACT;IAEApC,QAAQE,MAAM,CAACC,IAAI,CAAC,CAAC,yBAAyB,CAAC;IAC/CH,QAAQE,MAAM,CAACC,IAAI,CACjB;AAEJ,EAAC"}