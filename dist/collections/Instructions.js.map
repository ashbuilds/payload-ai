{"version":3,"sources":["../../src/collections/Instructions.ts"],"sourcesContent":["import type { CollectionConfig, GroupField } from 'payload'\nimport type { PluginConfig } from 'src/types.js'\n\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../defaults.js'\nimport { getGenerationModels } from '../utilities/getGenerationModels.js'\n\nconst groupSettings = (pluginConfig: PluginConfig) =>\n  (getGenerationModels(pluginConfig) ?? []).reduce((fields, model) => {\n    if (model.settings) {\n      fields.push(model.settings)\n    }\n    return fields\n  }, [] as GroupField[])\n\nconst modelOptions = (pluginConfig: PluginConfig) =>\n  (getGenerationModels(pluginConfig) ?? []).map((model) => {\n    return {\n      fields: model.fields,\n      label: model.name,\n      value: model.id,\n    }\n  })\n\nconst defaultAccessConfig = {\n  create: ({ req }: { req: { user?: any } }) => {\n    if (!req.user) {\n      return false\n    }\n    return true\n  },\n  delete: ({ req }: { req: { user?: any } }) => {\n    if (!req.user) {\n      return false\n    }\n    return true\n  },\n  read: ({ req }: { req: { user?: any } }) => {\n    if (!req.user) {\n      return false\n    }\n    return true\n  },\n  update: ({ req }: { req: { user?: any } }) => {\n    if (!req.user) {\n      return false\n    }\n    return true\n  },\n}\n\nconst defaultAdminConfig = {\n  group: 'Plugins',\n  hidden: true,\n}\n\nexport const instructionsCollection = (pluginConfig: PluginConfig) =>\n  <CollectionConfig>{\n    labels: {\n      plural: 'Compose Settings',\n      singular: 'Compose Setting',\n    },\n    ...pluginConfig.overrideInstructions,\n    slug: PLUGIN_INSTRUCTIONS_TABLE,\n    access: {\n      ...defaultAccessConfig,\n      ...pluginConfig.overrideInstructions?.access,\n    },\n    admin: {\n      ...defaultAdminConfig,\n      ...pluginConfig.overrideInstructions?.admin,\n    },\n    fields: [\n      {\n        name: 'schema-path',\n        type: 'text',\n        admin: {\n          description: \"Please don't change this unless you're sure of what you're doing\",\n        },\n        unique: true,\n      },\n      {\n        name: 'field-type',\n        type: 'select',\n        admin: {\n          description: \"Please don't change this unless you're sure of what you're doing\",\n        },\n        defaultValue: 'text',\n        label: 'Field type',\n        options: [\n          {\n            label: 'text',\n            value: 'text',\n          },\n          {\n            label: 'textarea',\n            value: 'textarea',\n          },\n          {\n            label: 'upload',\n            value: 'upload',\n          },\n          {\n            label: 'richText',\n            value: 'richText',\n          },\n        ],\n      },\n      {\n        name: 'relation-to',\n        type: 'text',\n        admin: {\n          condition: (_, current) => {\n            return current['field-type'] === 'upload'\n          },\n        },\n        label: 'Relation to',\n      },\n      {\n        name: 'model-id',\n        type: 'select',\n        admin: {\n          components: {\n            Field: {\n              clientProps: {\n                filterByField: 'field-type',\n                options: modelOptions(pluginConfig),\n              },\n              path: '@ai-stack/payloadcms/fields#SelectField',\n            },\n          },\n        },\n        label: 'Model',\n        options: modelOptions(pluginConfig).map((option) => {\n          return {\n            label: option.label,\n            value: option.value,\n          }\n        }),\n      },\n      {\n        name: 'disabled',\n        type: 'checkbox',\n        admin: {\n          description: 'Please reload your collection after applying the changes',\n        },\n        defaultValue: false,\n        label: 'Hide Compose button for this field',\n      },\n      {\n        id: 'ai-prompts-tabs',\n        type: 'tabs',\n        tabs: [\n          {\n            description:\n              'Define dynamic templates using {{ fieldName }}. Type { to see available field suggestions.',\n            fields: [\n              {\n                name: 'prompt',\n                type: 'textarea',\n                admin: {\n                  components: {\n                    Field: '@ai-stack/payloadcms/fields#PromptEditorField',\n                  },\n                  description: \"Click 'Compose' to run this custom prompt and generate content\",\n                },\n                label: '',\n              },\n            ],\n            label: 'Prompt',\n          },\n          {\n            admin: {\n              condition: (_, current) => {\n                return current['field-type'] === 'upload' && current['model-id'] === 'gpt-image-1'\n              },\n            },\n            description:\n              'These images will be used to generate new visuals in a similar style, layout, or content. You can combine multiple references for more controlled results.',\n            fields: [\n              {\n                name: 'images',\n                type: 'array',\n                fields: [\n                  {\n                    name: 'image',\n                    type: 'upload',\n                    admin: {\n                      description: 'Please make sure the image is publicly accessible.',\n                    },\n                    relationTo: pluginConfig.uploadCollectionSlug\n                      ? pluginConfig.uploadCollectionSlug\n                      : 'media',\n                  },\n                ],\n              },\n            ],\n            label: 'Sample Images',\n          },\n          {\n            admin: {\n              condition: (_, current) => {\n                return current['field-type'] === 'richText'\n              },\n            },\n            description: '',\n            fields: [\n              {\n                name: 'system',\n                type: 'textarea',\n                defaultValue: `INSTRUCTIONS:\nYou are a highly skilled and professional blog writer,\nrenowned for crafting engaging and well-organized articles.\nWhen given a title, you meticulously create blogs that are not only\ninformative and accurate but also captivating and beautifully structured.`,\n                label: '',\n              },\n            ],\n            label: 'System prompt',\n          },\n          {\n            admin: {\n              condition: (_, current) => {\n                return current['field-type'] === 'richText'\n              },\n            },\n            description: '',\n            fields: [\n              {\n                /** TODO:\n                 *  - Layouts can be saved in as an array\n                 *  - User can add their own layout to collections and use it later for generate specific rich text\n                 *  - User can select previously added layout\n                 */\n                name: 'layout',\n                type: 'textarea',\n                admin: {\n                  condition: (_, current) => {\n                    return current['field-type'] === 'richText'\n                  },\n                },\n                defaultValue: `[paragraph] - Write a concise introduction (2-3 sentences) that outlines the main topic.\n[horizontalrule] - Insert a horizontal rule to separate the introduction from the main content.\n[list] - Create a list with 3-5 items. Each list item should contain:\n   a. [heading] - A brief, descriptive heading (up to 5 words)\n   b. [paragraph] - A short explanation or elaboration (1-2 sentences)\n[horizontalrule] - Insert another horizontal rule to separate the main content from the conclusion.\n[paragraph] - Compose a brief conclusion (2-3 sentences) summarizing the key points.\n[quote] - Include a relevant quote from a famous person, directly related to the topic. Format: \"Quote text.\" - Author Name`,\n                label: '',\n              },\n            ],\n            label: 'Layout',\n          },\n        ],\n      },\n      ...groupSettings(pluginConfig),\n    ],\n  }\n"],"names":["PLUGIN_INSTRUCTIONS_TABLE","getGenerationModels","groupSettings","pluginConfig","reduce","fields","model","settings","push","modelOptions","map","label","name","value","id","defaultAccessConfig","create","req","user","delete","read","update","defaultAdminConfig","group","hidden","instructionsCollection","labels","plural","singular","overrideInstructions","slug","access","admin","type","description","unique","defaultValue","options","condition","_","current","components","Field","clientProps","filterByField","path","option","tabs","relationTo","uploadCollectionSlug"],"mappings":"AAGA,SAASA,yBAAyB,QAAQ,iBAAgB;AAC1D,SAASC,mBAAmB,QAAQ,sCAAqC;AAEzE,MAAMC,gBAAgB,CAACC,eACrB,AAACF,CAAAA,oBAAoBE,iBAAiB,EAAE,AAAD,EAAGC,MAAM,CAAC,CAACC,QAAQC;QACxD,IAAIA,MAAMC,QAAQ,EAAE;YAClBF,OAAOG,IAAI,CAACF,MAAMC,QAAQ;QAC5B;QACA,OAAOF;IACT,GAAG,EAAE;AAEP,MAAMI,eAAe,CAACN,eACpB,AAACF,CAAAA,oBAAoBE,iBAAiB,EAAE,AAAD,EAAGO,GAAG,CAAC,CAACJ;QAC7C,OAAO;YACLD,QAAQC,MAAMD,MAAM;YACpBM,OAAOL,MAAMM,IAAI;YACjBC,OAAOP,MAAMQ,EAAE;QACjB;IACF;AAEF,MAAMC,sBAAsB;IAC1BC,QAAQ,CAAC,EAAEC,GAAG,EAA2B;QACvC,IAAI,CAACA,IAAIC,IAAI,EAAE;YACb,OAAO;QACT;QACA,OAAO;IACT;IACAC,QAAQ,CAAC,EAAEF,GAAG,EAA2B;QACvC,IAAI,CAACA,IAAIC,IAAI,EAAE;YACb,OAAO;QACT;QACA,OAAO;IACT;IACAE,MAAM,CAAC,EAAEH,GAAG,EAA2B;QACrC,IAAI,CAACA,IAAIC,IAAI,EAAE;YACb,OAAO;QACT;QACA,OAAO;IACT;IACAG,QAAQ,CAAC,EAAEJ,GAAG,EAA2B;QACvC,IAAI,CAACA,IAAIC,IAAI,EAAE;YACb,OAAO;QACT;QACA,OAAO;IACT;AACF;AAEA,MAAMI,qBAAqB;IACzBC,OAAO;IACPC,QAAQ;AACV;AAEA,OAAO,MAAMC,yBAAyB,CAACtB,eACnB,CAAA;QAChBuB,QAAQ;YACNC,QAAQ;YACRC,UAAU;QACZ;QACA,GAAGzB,aAAa0B,oBAAoB;QACpCC,MAAM9B;QACN+B,QAAQ;YACN,GAAGhB,mBAAmB;YACtB,GAAGZ,aAAa0B,oBAAoB,EAAEE,MAAM;QAC9C;QACAC,OAAO;YACL,GAAGV,kBAAkB;YACrB,GAAGnB,aAAa0B,oBAAoB,EAAEG,KAAK;QAC7C;QACA3B,QAAQ;YACN;gBACEO,MAAM;gBACNqB,MAAM;gBACND,OAAO;oBACLE,aAAa;gBACf;gBACAC,QAAQ;YACV;YACA;gBACEvB,MAAM;gBACNqB,MAAM;gBACND,OAAO;oBACLE,aAAa;gBACf;gBACAE,cAAc;gBACdzB,OAAO;gBACP0B,SAAS;oBACP;wBACE1B,OAAO;wBACPE,OAAO;oBACT;oBACA;wBACEF,OAAO;wBACPE,OAAO;oBACT;oBACA;wBACEF,OAAO;wBACPE,OAAO;oBACT;oBACA;wBACEF,OAAO;wBACPE,OAAO;oBACT;iBACD;YACH;YACA;gBACED,MAAM;gBACNqB,MAAM;gBACND,OAAO;oBACLM,WAAW,CAACC,GAAGC;wBACb,OAAOA,OAAO,CAAC,aAAa,KAAK;oBACnC;gBACF;gBACA7B,OAAO;YACT;YACA;gBACEC,MAAM;gBACNqB,MAAM;gBACND,OAAO;oBACLS,YAAY;wBACVC,OAAO;4BACLC,aAAa;gCACXC,eAAe;gCACfP,SAAS5B,aAAaN;4BACxB;4BACA0C,MAAM;wBACR;oBACF;gBACF;gBACAlC,OAAO;gBACP0B,SAAS5B,aAAaN,cAAcO,GAAG,CAAC,CAACoC;oBACvC,OAAO;wBACLnC,OAAOmC,OAAOnC,KAAK;wBACnBE,OAAOiC,OAAOjC,KAAK;oBACrB;gBACF;YACF;YACA;gBACED,MAAM;gBACNqB,MAAM;gBACND,OAAO;oBACLE,aAAa;gBACf;gBACAE,cAAc;gBACdzB,OAAO;YACT;YACA;gBACEG,IAAI;gBACJmB,MAAM;gBACNc,MAAM;oBACJ;wBACEb,aACE;wBACF7B,QAAQ;4BACN;gCACEO,MAAM;gCACNqB,MAAM;gCACND,OAAO;oCACLS,YAAY;wCACVC,OAAO;oCACT;oCACAR,aAAa;gCACf;gCACAvB,OAAO;4BACT;yBACD;wBACDA,OAAO;oBACT;oBACA;wBACEqB,OAAO;4BACLM,WAAW,CAACC,GAAGC;gCACb,OAAOA,OAAO,CAAC,aAAa,KAAK,YAAYA,OAAO,CAAC,WAAW,KAAK;4BACvE;wBACF;wBACAN,aACE;wBACF7B,QAAQ;4BACN;gCACEO,MAAM;gCACNqB,MAAM;gCACN5B,QAAQ;oCACN;wCACEO,MAAM;wCACNqB,MAAM;wCACND,OAAO;4CACLE,aAAa;wCACf;wCACAc,YAAY7C,aAAa8C,oBAAoB,GACzC9C,aAAa8C,oBAAoB,GACjC;oCACN;iCACD;4BACH;yBACD;wBACDtC,OAAO;oBACT;oBACA;wBACEqB,OAAO;4BACLM,WAAW,CAACC,GAAGC;gCACb,OAAOA,OAAO,CAAC,aAAa,KAAK;4BACnC;wBACF;wBACAN,aAAa;wBACb7B,QAAQ;4BACN;gCACEO,MAAM;gCACNqB,MAAM;gCACNG,cAAc,CAAC;;;;yEAI0C,CAAC;gCAC1DzB,OAAO;4BACT;yBACD;wBACDA,OAAO;oBACT;oBACA;wBACEqB,OAAO;4BACLM,WAAW,CAACC,GAAGC;gCACb,OAAOA,OAAO,CAAC,aAAa,KAAK;4BACnC;wBACF;wBACAN,aAAa;wBACb7B,QAAQ;4BACN;gCACE;;;;iBAIC,GAJD;;;;iBAIC,GACDO,MAAM;gCACNqB,MAAM;gCACND,OAAO;oCACLM,WAAW,CAACC,GAAGC;wCACb,OAAOA,OAAO,CAAC,aAAa,KAAK;oCACnC;gCACF;gCACAJ,cAAc,CAAC;;;;;;;2HAO4F,CAAC;gCAC5GzB,OAAO;4BACT;yBACD;wBACDA,OAAO;oBACT;iBACD;YACH;eACGT,cAAcC;SAClB;IACH,CAAA,EAAC"}