{"version":3,"sources":["../../../src/ui/Floatype/Floatype.tsx"],"sourcesContent":["/**\n * OG Creator: Kailash Nadh\n * Github: https://github.com/knadh/floatype.js\n *\n * Reacted By: Claude 3.5 Sonnet and Ashbuilds\n * Warning: May contain nonsensical code\n */\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport styles from './floatype.module.scss'\n\ntype Options<T> = {\n  debounce?: number\n  onNavigate?: (direction: number, items: T[], currentIndex: number) => void\n  onQuery: (query: string) => T[]\n  onRender?: (item: T) => React.ReactNode\n  onSelect?: (item: T, query: string) => string\n  onUpdate: (value: string) => void\n}\n\ntype FloatypeProps<T> = {\n  inputRef: React.RefObject<HTMLInputElement | HTMLTextAreaElement>\n  options: Partial<Options<T>>\n}\n\nexport function Floatype<T>({ inputRef, options }: FloatypeProps<T>) {\n  const [items, setItems] = useState<T[]>([])\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [query, setQuery] = useState<null | string>(null)\n  const boxRef = useRef<HTMLDivElement>(null)\n  const shadowRef = useRef<HTMLDivElement>(null)\n  const [coords, setCoords] = useState<{ x: number; y: number } | null>(null)\n\n  const opt: Options<T> = {\n    debounce: 100,\n    onNavigate: undefined,\n    onQuery: () => [],\n    onRender: undefined,\n    onSelect: undefined,\n    onUpdate: () => {},\n    ...options,\n  }\n\n  const destroy = useCallback(() => {\n    setItems([])\n    setCurrentIndex(0)\n    setQuery(null)\n  }, [])\n\n  const getLastWord = useCallback((el: HTMLInputElement | HTMLTextAreaElement): null | string => {\n    const text = el.value.substring(0, el.selectionStart ?? 0)\n    const match = text.match(/\\S+\\s*$/)\n    return match ? match[0] : null\n  }, [])\n\n  const handleBlur = useCallback(() => {\n    // Uncomment the following line if you want to destroy on blur\n    destroy()\n  }, [])\n\n  useEffect(() => {\n    const fetchItems = () => {\n      if (!query) return\n      const newItems = opt.onQuery(query)\n      setItems(newItems)\n    }\n\n    const timeoutId = setTimeout(fetchItems, opt.debounce)\n    return () => clearTimeout(timeoutId)\n  }, [query, opt.onQuery, opt.debounce])\n\n  useEffect(() => {\n    if (opt.onNavigate) {\n      opt.onNavigate(1, items, currentIndex)\n    }\n  }, [currentIndex, items, opt])\n\n  useEffect(() => {\n    if (!shadowRef.current || !inputRef.current) return\n\n    const shadow = shadowRef.current\n    const el = inputRef.current\n\n    const stylesCss = window.getComputedStyle(el)\n    for (const p of stylesCss) {\n      shadow.style[p] = stylesCss[p]\n    }\n\n    shadow.style.position = 'absolute'\n    shadow.style.padding = '0.9rem 1.4rem'\n    shadow.style.minHeight = 'calc(5.8rem + 32px)'\n    shadow.style.visibility = 'hidden'\n  }, [inputRef])\n\n  const getCaret = useCallback((): { x: number; y: number } | null => {\n    if (!inputRef.current || !shadowRef.current) return null\n\n    const el = inputRef.current\n    const shadow = shadowRef.current\n\n    const txt = el.value.substring(0, el.selectionStart ?? 0)\n    const start = Math.max(txt.lastIndexOf('\\n'), txt.lastIndexOf(' ')) + 1\n\n    const cl = 'floatype-caret'\n    shadow.innerHTML =\n      el.value.substring(0, start) +\n      `<span id=\"${cl}\" style=\"display: inline-block;\">${el.value.substring(start)}</span>`\n\n    const m = shadow.querySelector(`#${cl}`)\n    const rect = el.getBoundingClientRect()\n    const rectM = m?.getBoundingClientRect()\n\n    let top = rect.top + (rect.top - rectM.top)\n    let left = rectM.left - 32 * 2 + rectM.width\n    if (boxRef.current && currentIndex) {\n      const box = boxRef.current\n      const selected = box.children[currentIndex] as HTMLElement\n      if (selected) {\n        top -= selected.offsetTop + (selected.clientHeight / 2 - 5)\n      }\n    }\n    if (boxRef.current) {\n      const box = boxRef.current\n      if (box.clientWidth + left + 50 > window.innerWidth) {\n        left = left - box.offsetWidth - 50\n      }\n    }\n\n    return {\n      x: left,\n      y: top,\n    }\n  }, [inputRef, shadowRef, boxRef, currentIndex])\n\n  const insertWord = useCallback(\n    (el: HTMLInputElement | HTMLTextAreaElement, val: string): void => {\n      const start =\n        Math.max(\n          el.value.lastIndexOf(' ', (el.selectionStart ?? 0) - 1),\n          el.value.lastIndexOf('\\n', (el.selectionStart ?? 0) - 1),\n        ) + 1\n      el.value =\n        el.value.substring(0, start) +\n        val +\n        (el.value[el.selectionStart ?? 0] !== ' ' ? ' ' : '') +\n        el.value.substring(el.selectionStart ?? 0)\n      el.setSelectionRange(start + val.length + 1, start + val.length + 1)\n\n      opt.onUpdate(el.value)\n    },\n    [opt],\n  )\n\n  const handleInput = useCallback(() => {\n    if (!inputRef.current) return\n    const w = getLastWord(inputRef.current)\n    if (!w) {\n      destroy()\n      return\n    }\n    setQuery(w)\n  }, [inputRef, getLastWord, destroy])\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      if (!boxRef.current) return\n\n      switch (e.keyCode) {\n        case 38: // Up arrow\n          e.preventDefault()\n          setCurrentIndex((prev) => (prev - 1 + items.length) % items.length)\n          break\n        case 40: // Down arrow\n          e.preventDefault()\n          setCurrentIndex((prev) => (prev + 1) % items.length)\n          break\n        case 9: // Tab\n        case 32: // Space\n          break\n        case 13: // Enter\n          e.preventDefault()\n          if (inputRef.current) {\n            const selectedItem = items[currentIndex]\n            const newVal = opt.onSelect\n              ? opt.onSelect(selectedItem, query)\n              : (selectedItem as unknown as string)\n            insertWord(inputRef.current, newVal)\n          }\n          destroy()\n          break\n        case 27: // Escape\n          destroy()\n          break\n      }\n    },\n    [boxRef, items, currentIndex, inputRef, opt.onSelect, insertWord, destroy, query],\n  )\n\n  useEffect(() => {\n    if (!inputRef.current) return\n\n    const el = inputRef.current\n    el.addEventListener('input', handleInput)\n    el.addEventListener('keydown', handleKeyDown as any)\n    el.addEventListener('blur', handleBlur)\n\n    return () => {\n      el.removeEventListener('input', handleInput)\n      el.removeEventListener('keydown', handleKeyDown as any)\n      el.removeEventListener('blur', handleBlur)\n    }\n  }, [inputRef, handleInput, handleKeyDown, handleBlur])\n\n  useEffect(() => {\n    const fetchItems = () => {\n      if (!query) return\n      const newItems = opt.onQuery(query)\n      setItems(newItems)\n\n      // Calculate coordinates after items are fetched\n      const newCoords = getCaret()\n      setCoords(newCoords)\n    }\n\n    const timeoutId = setTimeout(fetchItems, opt.debounce)\n    return () => clearTimeout(timeoutId)\n  }, [query, opt.onQuery, opt.debounce, getCaret, currentIndex])\n\n  useEffect(() => {\n    if (boxRef.current && coords) {\n      const box = boxRef.current\n      box.style.position = 'fixed'\n      box.style.left = `${coords.x}px`\n      box.style.top = `${coords.y}px`\n      box.style.width = inputRef.current ? window.getComputedStyle(inputRef.current).width : 'auto'\n      box.style.display = items.length > 0 ? 'block' : 'none'\n    }\n  }, [coords, items, inputRef])\n\n  // TODO: Fix the display issue\n  return (\n    <div\n      className=\"field-type textarea\"\n      style={{\n        // display: items.length > 0 ? 'block' : 'none',\n        // margin: items.length > 0 ? 'block' : 'none',\n        position: 'relative',\n      }}\n    >\n      <div className=\"textarea-outer\" ref={shadowRef} style={{ position: 'absolute' }} />\n      {items.length > 0 ? (\n        <div className={styles.floatype} ref={boxRef}>\n          {items.map((item, idx) => (\n            <div\n              className={`${styles.floatype_item} ${idx === currentIndex ? styles.floatype_sel : ''}`}\n              data-selected={idx === currentIndex}\n              key={idx}\n              onMouseDown={() => {\n                if (inputRef.current) {\n                  const newVal = opt.onSelect\n                    ? opt.onSelect(item, query)\n                    : (item as unknown as string)\n                  insertWord(inputRef.current, newVal)\n                }\n                destroy()\n              }}\n            >\n              {opt.onRender ? opt.onRender(item) : (item as unknown as string)}\n            </div>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n"],"names":["React","useCallback","useEffect","useRef","useState","styles","Floatype","inputRef","options","items","setItems","currentIndex","setCurrentIndex","query","setQuery","boxRef","shadowRef","coords","setCoords","opt","debounce","onNavigate","undefined","onQuery","onRender","onSelect","onUpdate","destroy","getLastWord","el","text","value","substring","selectionStart","match","handleBlur","fetchItems","newItems","timeoutId","setTimeout","clearTimeout","current","shadow","stylesCss","window","getComputedStyle","p","style","position","padding","minHeight","visibility","getCaret","txt","start","Math","max","lastIndexOf","cl","innerHTML","m","querySelector","rect","getBoundingClientRect","rectM","top","left","width","box","selected","children","offsetTop","clientHeight","clientWidth","innerWidth","offsetWidth","x","y","insertWord","val","setSelectionRange","length","handleInput","w","handleKeyDown","e","keyCode","preventDefault","prev","selectedItem","newVal","addEventListener","removeEventListener","newCoords","display","div","className","ref","floatype","map","item","idx","floatype_item","floatype_sel","data-selected","onMouseDown"],"mappings":"AAAA;;;;;;CAMC;AAED,OAAOA,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,QAAO;AAEvE,OAAOC,YAAY,yBAAwB;AAgB3C,OAAO,SAASC,SAAY,EAAEC,QAAQ,EAAEC,OAAO,EAAoB;IACjE,MAAM,CAACC,OAAOC,SAAS,GAAGN,SAAc,EAAE;IAC1C,MAAM,CAACO,cAAcC,gBAAgB,GAAGR,SAAS;IACjD,MAAM,CAACS,OAAOC,SAAS,GAAGV,SAAwB;IAClD,MAAMW,SAASZ,OAAuB;IACtC,MAAMa,YAAYb,OAAuB;IACzC,MAAM,CAACc,QAAQC,UAAU,GAAGd,SAA0C;IAEtE,MAAMe,MAAkB;QACtBC,UAAU;QACVC,YAAYC;QACZC,SAAS,IAAM,EAAE;QACjBC,UAAUF;QACVG,UAAUH;QACVI,UAAU,KAAO;QACjB,GAAGlB,OAAO;IACZ;IAEA,MAAMmB,UAAU1B,YAAY;QAC1BS,SAAS,EAAE;QACXE,gBAAgB;QAChBE,SAAS;IACX,GAAG,EAAE;IAEL,MAAMc,cAAc3B,YAAY,CAAC4B;QAC/B,MAAMC,OAAOD,GAAGE,KAAK,CAACC,SAAS,CAAC,GAAGH,GAAGI,cAAc,IAAI;QACxD,MAAMC,QAAQJ,KAAKI,KAAK,CAAC;QACzB,OAAOA,QAAQA,KAAK,CAAC,EAAE,GAAG;IAC5B,GAAG,EAAE;IAEL,MAAMC,aAAalC,YAAY;QAC7B,8DAA8D;QAC9D0B;IACF,GAAG,EAAE;IAELzB,UAAU;QACR,MAAMkC,aAAa;YACjB,IAAI,CAACvB,OAAO;YACZ,MAAMwB,WAAWlB,IAAII,OAAO,CAACV;YAC7BH,SAAS2B;QACX;QAEA,MAAMC,YAAYC,WAAWH,YAAYjB,IAAIC,QAAQ;QACrD,OAAO,IAAMoB,aAAaF;IAC5B,GAAG;QAACzB;QAAOM,IAAII,OAAO;QAAEJ,IAAIC,QAAQ;KAAC;IAErClB,UAAU;QACR,IAAIiB,IAAIE,UAAU,EAAE;YAClBF,IAAIE,UAAU,CAAC,GAAGZ,OAAOE;QAC3B;IACF,GAAG;QAACA;QAAcF;QAAOU;KAAI;IAE7BjB,UAAU;QACR,IAAI,CAACc,UAAUyB,OAAO,IAAI,CAAClC,SAASkC,OAAO,EAAE;QAE7C,MAAMC,SAAS1B,UAAUyB,OAAO;QAChC,MAAMZ,KAAKtB,SAASkC,OAAO;QAE3B,MAAME,YAAYC,OAAOC,gBAAgB,CAAChB;QAC1C,KAAK,MAAMiB,KAAKH,UAAW;YACzBD,OAAOK,KAAK,CAACD,EAAE,GAAGH,SAAS,CAACG,EAAE;QAChC;QAEAJ,OAAOK,KAAK,CAACC,QAAQ,GAAG;QACxBN,OAAOK,KAAK,CAACE,OAAO,GAAG;QACvBP,OAAOK,KAAK,CAACG,SAAS,GAAG;QACzBR,OAAOK,KAAK,CAACI,UAAU,GAAG;IAC5B,GAAG;QAAC5C;KAAS;IAEb,MAAM6C,WAAWnD,YAAY;QAC3B,IAAI,CAACM,SAASkC,OAAO,IAAI,CAACzB,UAAUyB,OAAO,EAAE,OAAO;QAEpD,MAAMZ,KAAKtB,SAASkC,OAAO;QAC3B,MAAMC,SAAS1B,UAAUyB,OAAO;QAEhC,MAAMY,MAAMxB,GAAGE,KAAK,CAACC,SAAS,CAAC,GAAGH,GAAGI,cAAc,IAAI;QACvD,MAAMqB,QAAQC,KAAKC,GAAG,CAACH,IAAII,WAAW,CAAC,OAAOJ,IAAII,WAAW,CAAC,QAAQ;QAEtE,MAAMC,KAAK;QACXhB,OAAOiB,SAAS,GACd9B,GAAGE,KAAK,CAACC,SAAS,CAAC,GAAGsB,SACtB,CAAC,UAAU,EAAEI,GAAG,iCAAiC,EAAE7B,GAAGE,KAAK,CAACC,SAAS,CAACsB,OAAO,OAAO,CAAC;QAEvF,MAAMM,IAAIlB,OAAOmB,aAAa,CAAC,CAAC,CAAC,EAAEH,GAAG,CAAC;QACvC,MAAMI,OAAOjC,GAAGkC,qBAAqB;QACrC,MAAMC,QAAQJ,GAAGG;QAEjB,IAAIE,MAAMH,KAAKG,GAAG,GAAIH,CAAAA,KAAKG,GAAG,GAAGD,MAAMC,GAAG,AAAD;QACzC,IAAIC,OAAOF,MAAME,IAAI,GAAG,KAAK,IAAIF,MAAMG,KAAK;QAC5C,IAAIpD,OAAO0B,OAAO,IAAI9B,cAAc;YAClC,MAAMyD,MAAMrD,OAAO0B,OAAO;YAC1B,MAAM4B,WAAWD,IAAIE,QAAQ,CAAC3D,aAAa;YAC3C,IAAI0D,UAAU;gBACZJ,OAAOI,SAASE,SAAS,GAAIF,CAAAA,SAASG,YAAY,GAAG,IAAI,CAAA;YAC3D;QACF;QACA,IAAIzD,OAAO0B,OAAO,EAAE;YAClB,MAAM2B,MAAMrD,OAAO0B,OAAO;YAC1B,IAAI2B,IAAIK,WAAW,GAAGP,OAAO,KAAKtB,OAAO8B,UAAU,EAAE;gBACnDR,OAAOA,OAAOE,IAAIO,WAAW,GAAG;YAClC;QACF;QAEA,OAAO;YACLC,GAAGV;YACHW,GAAGZ;QACL;IACF,GAAG;QAAC1D;QAAUS;QAAWD;QAAQJ;KAAa;IAE9C,MAAMmE,aAAa7E,YACjB,CAAC4B,IAA4CkD;QAC3C,MAAMzB,QACJC,KAAKC,GAAG,CACN3B,GAAGE,KAAK,CAAC0B,WAAW,CAAC,KAAK,AAAC5B,CAAAA,GAAGI,cAAc,IAAI,CAAA,IAAK,IACrDJ,GAAGE,KAAK,CAAC0B,WAAW,CAAC,MAAM,AAAC5B,CAAAA,GAAGI,cAAc,IAAI,CAAA,IAAK,MACpD;QACNJ,GAAGE,KAAK,GACNF,GAAGE,KAAK,CAACC,SAAS,CAAC,GAAGsB,SACtByB,MACClD,CAAAA,GAAGE,KAAK,CAACF,GAAGI,cAAc,IAAI,EAAE,KAAK,MAAM,MAAM,EAAC,IACnDJ,GAAGE,KAAK,CAACC,SAAS,CAACH,GAAGI,cAAc,IAAI;QAC1CJ,GAAGmD,iBAAiB,CAAC1B,QAAQyB,IAAIE,MAAM,GAAG,GAAG3B,QAAQyB,IAAIE,MAAM,GAAG;QAElE9D,IAAIO,QAAQ,CAACG,GAAGE,KAAK;IACvB,GACA;QAACZ;KAAI;IAGP,MAAM+D,cAAcjF,YAAY;QAC9B,IAAI,CAACM,SAASkC,OAAO,EAAE;QACvB,MAAM0C,IAAIvD,YAAYrB,SAASkC,OAAO;QACtC,IAAI,CAAC0C,GAAG;YACNxD;YACA;QACF;QACAb,SAASqE;IACX,GAAG;QAAC5E;QAAUqB;QAAaD;KAAQ;IAEnC,MAAMyD,gBAAgBnF,YACpB,CAACoF;QACC,IAAI,CAACtE,OAAO0B,OAAO,EAAE;QAErB,OAAQ4C,EAAEC,OAAO;YACf,KAAK;gBACHD,EAAEE,cAAc;gBAChB3E,gBAAgB,CAAC4E,OAAS,AAACA,CAAAA,OAAO,IAAI/E,MAAMwE,MAAM,AAAD,IAAKxE,MAAMwE,MAAM;gBAClE;YACF,KAAK;gBACHI,EAAEE,cAAc;gBAChB3E,gBAAgB,CAAC4E,OAAS,AAACA,CAAAA,OAAO,CAAA,IAAK/E,MAAMwE,MAAM;gBACnD;YACF,KAAK;YACL,KAAK;gBACH;YACF,KAAK;gBACHI,EAAEE,cAAc;gBAChB,IAAIhF,SAASkC,OAAO,EAAE;oBACpB,MAAMgD,eAAehF,KAAK,CAACE,aAAa;oBACxC,MAAM+E,SAASvE,IAAIM,QAAQ,GACvBN,IAAIM,QAAQ,CAACgE,cAAc5E,SAC1B4E;oBACLX,WAAWvE,SAASkC,OAAO,EAAEiD;gBAC/B;gBACA/D;gBACA;YACF,KAAK;gBACHA;gBACA;QACJ;IACF,GACA;QAACZ;QAAQN;QAAOE;QAAcJ;QAAUY,IAAIM,QAAQ;QAAEqD;QAAYnD;QAASd;KAAM;IAGnFX,UAAU;QACR,IAAI,CAACK,SAASkC,OAAO,EAAE;QAEvB,MAAMZ,KAAKtB,SAASkC,OAAO;QAC3BZ,GAAG8D,gBAAgB,CAAC,SAAST;QAC7BrD,GAAG8D,gBAAgB,CAAC,WAAWP;QAC/BvD,GAAG8D,gBAAgB,CAAC,QAAQxD;QAE5B,OAAO;YACLN,GAAG+D,mBAAmB,CAAC,SAASV;YAChCrD,GAAG+D,mBAAmB,CAAC,WAAWR;YAClCvD,GAAG+D,mBAAmB,CAAC,QAAQzD;QACjC;IACF,GAAG;QAAC5B;QAAU2E;QAAaE;QAAejD;KAAW;IAErDjC,UAAU;QACR,MAAMkC,aAAa;YACjB,IAAI,CAACvB,OAAO;YACZ,MAAMwB,WAAWlB,IAAII,OAAO,CAACV;YAC7BH,SAAS2B;YAET,gDAAgD;YAChD,MAAMwD,YAAYzC;YAClBlC,UAAU2E;QACZ;QAEA,MAAMvD,YAAYC,WAAWH,YAAYjB,IAAIC,QAAQ;QACrD,OAAO,IAAMoB,aAAaF;IAC5B,GAAG;QAACzB;QAAOM,IAAII,OAAO;QAAEJ,IAAIC,QAAQ;QAAEgC;QAAUzC;KAAa;IAE7DT,UAAU;QACR,IAAIa,OAAO0B,OAAO,IAAIxB,QAAQ;YAC5B,MAAMmD,MAAMrD,OAAO0B,OAAO;YAC1B2B,IAAIrB,KAAK,CAACC,QAAQ,GAAG;YACrBoB,IAAIrB,KAAK,CAACmB,IAAI,GAAG,CAAC,EAAEjD,OAAO2D,CAAC,CAAC,EAAE,CAAC;YAChCR,IAAIrB,KAAK,CAACkB,GAAG,GAAG,CAAC,EAAEhD,OAAO4D,CAAC,CAAC,EAAE,CAAC;YAC/BT,IAAIrB,KAAK,CAACoB,KAAK,GAAG5D,SAASkC,OAAO,GAAGG,OAAOC,gBAAgB,CAACtC,SAASkC,OAAO,EAAE0B,KAAK,GAAG;YACvFC,IAAIrB,KAAK,CAAC+C,OAAO,GAAGrF,MAAMwE,MAAM,GAAG,IAAI,UAAU;QACnD;IACF,GAAG;QAAChE;QAAQR;QAAOF;KAAS;IAE5B,8BAA8B;IAC9B,qBACE,MAACwF;QACCC,WAAU;QACVjD,OAAO;YACL,gDAAgD;YAChD,+CAA+C;YAC/CC,UAAU;QACZ;;0BAEA,KAAC+C;gBAAIC,WAAU;gBAAiBC,KAAKjF;gBAAW+B,OAAO;oBAAEC,UAAU;gBAAW;;YAC7EvC,MAAMwE,MAAM,GAAG,kBACd,KAACc;gBAAIC,WAAW3F,OAAO6F,QAAQ;gBAAED,KAAKlF;0BACnCN,MAAM0F,GAAG,CAAC,CAACC,MAAMC,oBAChB,KAACN;wBACCC,WAAW,CAAC,EAAE3F,OAAOiG,aAAa,CAAC,CAAC,EAAED,QAAQ1F,eAAeN,OAAOkG,YAAY,GAAG,GAAG,CAAC;wBACvFC,iBAAeH,QAAQ1F;wBAEvB8F,aAAa;4BACX,IAAIlG,SAASkC,OAAO,EAAE;gCACpB,MAAMiD,SAASvE,IAAIM,QAAQ,GACvBN,IAAIM,QAAQ,CAAC2E,MAAMvF,SAClBuF;gCACLtB,WAAWvE,SAASkC,OAAO,EAAEiD;4BAC/B;4BACA/D;wBACF;kCAECR,IAAIK,QAAQ,GAAGL,IAAIK,QAAQ,CAAC4E,QAASA;uBAXjCC;iBAeT;;;AAGV"}