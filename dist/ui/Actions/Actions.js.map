{"version":3,"sources":["../../../src/ui/Actions/Actions.tsx"],"sourcesContent":["'use client'\n\nimport { FieldDescription, Popup, useDocumentDrawer, useFieldProps } from '@payloadcms/ui'\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport { PluginIcon } from './Icons.js'\nimport styles from './actions.module.scss'\nimport { useGenerate } from './hooks/useGenerate.js'\nimport { useMenu } from './hooks/useMenu.js'\n\nfunction findParentWithClass(element, className) {\n  // Base case: if the element is null or we've reached the top of the DOM\n  if (!element || element === document.body) {\n    return null\n  }\n\n  // Check if the current element has the class we're looking for\n  if (element.classList.contains(className)) {\n    return element\n  }\n\n  // Recursively call the function on the parent element\n  return findParentWithClass(element.parentElement, className)\n}\n\n//TODO: Add undo/redo to the actions toolbar\nexport const Actions = ({ descriptionProps, instructionId }) => {\n  const [DocumentDrawer, _, { closeDrawer, openDrawer }] = useDocumentDrawer({\n    id: instructionId,\n    collectionSlug: 'instructions',\n  })\n\n  const fieldProps = useFieldProps()\n  const { type: fieldType, path: pathFromContext, schemaPath } = fieldProps\n\n  const [input, setInput] = useState(null)\n  const [lexicalEditor, setLexicalEditor] = useState()\n  const actionsRef = useRef(null)\n  // Used to show the actions menu on active input fields\n  useEffect(() => {\n    const fieldId = `field-${pathFromContext.replace(/\\./g, '__')}`\n    let inputElement = document.getElementById(fieldId)\n\n    if (!actionsRef.current) return\n    actionsRef.current.setAttribute('for', fieldId)\n\n    if (!inputElement) {\n      if (fieldType === 'richText') {\n        const editorWrapper = findParentWithClass(actionsRef.current, 'field-type')\n        //TODO: Find a better way get rich-text field instance\n        setTimeout(() => {\n          inputElement = editorWrapper.querySelector('div[contenteditable=\"true\"]')\n          // @ts-expect-error\n          setLexicalEditor(inputElement.__lexicalEditor)\n          setInput(inputElement)\n        }, 0)\n      }\n    } else {\n      setInput(inputElement)\n    }\n  }, [pathFromContext, schemaPath, actionsRef])\n\n  useEffect(() => {\n    if (!input || !actionsRef.current) return\n\n    actionsRef.current.classList.add(styles.actions_hidden)\n    input.addEventListener('click', (event) => {\n      document.querySelectorAll('.ai-plugin-active')?.forEach((element) => {\n        element.querySelector(`.${styles.actions}`).classList.add(styles.actions_hidden)\n        element.classList.remove('ai-plugin-active')\n      })\n\n      actionsRef.current.classList.remove(styles.actions_hidden)\n      const parentWithClass = findParentWithClass(event.target, 'field-type')\n      parentWithClass.classList.add('ai-plugin-active')\n    })\n  }, [input, actionsRef])\n\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  const { generate, isLoading } = useGenerate({ lexicalEditor })\n  const { ActiveComponent, Menu } = useMenu(\n    { lexicalEditor },\n    {\n      onCompose: async () => {\n        console.log('Composing...')\n        setIsProcessing(true)\n        await generate({\n          action: 'Compose',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onExpand: async () => {\n        console.log('Expanding...')\n        await generate({\n          action: 'Expand',\n        })\n      },\n      onProofread: async () => {\n        console.log('Proofreading...')\n        await generate({\n          action: 'Proofread',\n        })\n      },\n      onRephrase: async () => {\n        console.log('Rephrasing...')\n        await generate({\n          action: 'Rephrase',\n        })\n      },\n      onSettings: openDrawer,\n      onSimplify: async () => {\n        console.log('Simplifying...')\n        await generate({\n          action: 'Simplify',\n        })\n      },\n    },\n  )\n\n  return (\n    <React.Fragment>\n      <label className={`${styles.actions}`} ref={actionsRef}>\n        <DocumentDrawer\n          onSave={() => {\n            closeDrawer()\n          }}\n        />\n        <Popup\n          button={<PluginIcon isLoading={isProcessing || isLoading} />}\n          render={({ close }) => {\n            return <Menu onClose={close} />\n          }}\n          verticalAlign=\"bottom\"\n        />\n        <ActiveComponent />\n      </label>\n      <div>\n        <FieldDescription {...descriptionProps} />\n      </div>\n    </React.Fragment>\n  )\n}\n"],"names":["FieldDescription","Popup","useDocumentDrawer","useFieldProps","React","useEffect","useRef","useState","PluginIcon","styles","useGenerate","useMenu","findParentWithClass","element","className","document","body","classList","contains","parentElement","Actions","descriptionProps","instructionId","DocumentDrawer","_","closeDrawer","openDrawer","id","collectionSlug","fieldProps","type","fieldType","path","pathFromContext","schemaPath","input","setInput","lexicalEditor","setLexicalEditor","actionsRef","fieldId","replace","inputElement","getElementById","current","setAttribute","editorWrapper","setTimeout","querySelector","__lexicalEditor","add","actions_hidden","addEventListener","event","querySelectorAll","forEach","actions","remove","parentWithClass","target","isProcessing","setIsProcessing","generate","isLoading","ActiveComponent","Menu","onCompose","console","log","action","finally","onExpand","onProofread","onRephrase","onSettings","onSimplify","Fragment","label","ref","onSave","button","render","close","onClose","verticalAlign","div"],"mappings":"AAAA;;AAEA,SAASA,gBAAgB,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,QAAQ,iBAAgB;AAC1F,OAAOC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,QAAO;AAE1D,SAASC,UAAU,QAAQ,aAAY;AACvC,OAAOC,YAAY,wBAAuB;AAC1C,SAASC,WAAW,QAAQ,yBAAwB;AACpD,SAASC,OAAO,QAAQ,qBAAoB;AAE5C,SAASC,oBAAoBC,OAAO,EAAEC,SAAS;IAC7C,wEAAwE;IACxE,IAAI,CAACD,WAAWA,YAAYE,SAASC,IAAI,EAAE;QACzC,OAAO;IACT;IAEA,+DAA+D;IAC/D,IAAIH,QAAQI,SAAS,CAACC,QAAQ,CAACJ,YAAY;QACzC,OAAOD;IACT;IAEA,sDAAsD;IACtD,OAAOD,oBAAoBC,QAAQM,aAAa,EAAEL;AACpD;AAEA,4CAA4C;AAC5C,OAAO,MAAMM,UAAU,CAAC,EAAEC,gBAAgB,EAAEC,aAAa,EAAE;IACzD,MAAM,CAACC,gBAAgBC,GAAG,EAAEC,WAAW,EAAEC,UAAU,EAAE,CAAC,GAAGxB,kBAAkB;QACzEyB,IAAIL;QACJM,gBAAgB;IAClB;IAEA,MAAMC,aAAa1B;IACnB,MAAM,EAAE2B,MAAMC,SAAS,EAAEC,MAAMC,eAAe,EAAEC,UAAU,EAAE,GAAGL;IAE/D,MAAM,CAACM,OAAOC,SAAS,GAAG7B,SAAS;IACnC,MAAM,CAAC8B,eAAeC,iBAAiB,GAAG/B;IAC1C,MAAMgC,aAAajC,OAAO;IAC1B,uDAAuD;IACvDD,UAAU;QACR,MAAMmC,UAAU,CAAC,MAAM,EAAEP,gBAAgBQ,OAAO,CAAC,OAAO,MAAM,CAAC;QAC/D,IAAIC,eAAe3B,SAAS4B,cAAc,CAACH;QAE3C,IAAI,CAACD,WAAWK,OAAO,EAAE;QACzBL,WAAWK,OAAO,CAACC,YAAY,CAAC,OAAOL;QAEvC,IAAI,CAACE,cAAc;YACjB,IAAIX,cAAc,YAAY;gBAC5B,MAAMe,gBAAgBlC,oBAAoB2B,WAAWK,OAAO,EAAE;gBAC9D,sDAAsD;gBACtDG,WAAW;oBACTL,eAAeI,cAAcE,aAAa,CAAC;oBAC3C,mBAAmB;oBACnBV,iBAAiBI,aAAaO,eAAe;oBAC7Cb,SAASM;gBACX,GAAG;YACL;QACF,OAAO;YACLN,SAASM;QACX;IACF,GAAG;QAACT;QAAiBC;QAAYK;KAAW;IAE5ClC,UAAU;QACR,IAAI,CAAC8B,SAAS,CAACI,WAAWK,OAAO,EAAE;QAEnCL,WAAWK,OAAO,CAAC3B,SAAS,CAACiC,GAAG,CAACzC,OAAO0C,cAAc;QACtDhB,MAAMiB,gBAAgB,CAAC,SAAS,CAACC;YAC/BtC,SAASuC,gBAAgB,CAAC,sBAAsBC,QAAQ,CAAC1C;gBACvDA,QAAQmC,aAAa,CAAC,CAAC,CAAC,EAAEvC,OAAO+C,OAAO,CAAC,CAAC,EAAEvC,SAAS,CAACiC,GAAG,CAACzC,OAAO0C,cAAc;gBAC/EtC,QAAQI,SAAS,CAACwC,MAAM,CAAC;YAC3B;YAEAlB,WAAWK,OAAO,CAAC3B,SAAS,CAACwC,MAAM,CAAChD,OAAO0C,cAAc;YACzD,MAAMO,kBAAkB9C,oBAAoByC,MAAMM,MAAM,EAAE;YAC1DD,gBAAgBzC,SAAS,CAACiC,GAAG,CAAC;QAChC;IACF,GAAG;QAACf;QAAOI;KAAW;IAEtB,MAAM,CAACqB,cAAcC,gBAAgB,GAAGtD,SAAS;IAEjD,MAAM,EAAEuD,QAAQ,EAAEC,SAAS,EAAE,GAAGrD,YAAY;QAAE2B;IAAc;IAC5D,MAAM,EAAE2B,eAAe,EAAEC,IAAI,EAAE,GAAGtD,QAChC;QAAE0B;IAAc,GAChB;QACE6B,WAAW;YACTC,QAAQC,GAAG,CAAC;YACZP,gBAAgB;YAChB,MAAMC,SAAS;gBACbO,QAAQ;YACV,GAAGC,OAAO,CAAC;gBACTT,gBAAgB;YAClB;QACF;QACAU,UAAU;YACRJ,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAG,aAAa;YACXL,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAI,YAAY;YACVN,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAK,YAAYhD;QACZiD,YAAY;YACVR,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;IACF;IAGF,qBACE,MAACjE,MAAMwE,QAAQ;;0BACb,MAACC;gBAAM/D,WAAW,CAAC,EAAEL,OAAO+C,OAAO,CAAC,CAAC;gBAAEsB,KAAKvC;;kCAC1C,KAAChB;wBACCwD,QAAQ;4BACNtD;wBACF;;kCAEF,KAACxB;wBACC+E,sBAAQ,KAACxE;4BAAWuD,WAAWH,gBAAgBG;;wBAC/CkB,QAAQ,CAAC,EAAEC,KAAK,EAAE;4BAChB,qBAAO,KAACjB;gCAAKkB,SAASD;;wBACxB;wBACAE,eAAc;;kCAEhB,KAACpB;;;0BAEH,KAACqB;0BACC,cAAA,KAACrF;oBAAkB,GAAGqB,gBAAgB;;;;;AAI9C,EAAC"}