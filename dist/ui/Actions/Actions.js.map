{"version":3,"sources":["../../../src/ui/Actions/Actions.tsx"],"sourcesContent":["'use client'\n\nimport type { LexicalEditor } from 'lexical'\n\nimport { FieldDescription, Popup, useDocumentDrawer, useField, useFieldProps } from '@payloadcms/ui'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../../defaults.js'\nimport { PluginIcon } from '../Icons/Icons.js'\nimport styles from './actions.module.css'\nimport { useGenerate } from './hooks/useGenerate.js'\nimport { useHistory } from './hooks/useHistory.js'\nimport { useMenu } from './hooks/useMenu.js'\n\nfunction findParentWithClass(element, className) {\n  // Base case: if the element is null or we've reached the top of the DOM\n  if (!element || element === document.body) {\n    return null\n  }\n\n  // Check if the current element has the class we're looking for\n  if (element.classList.contains(className)) {\n    return element\n  }\n\n  // Recursively call the function on the parent element\n  return findParentWithClass(element.parentElement, className)\n}\n\n//TODO: Add undo/redo to the actions toolbar\nexport const Actions = ({ descriptionProps = {}, instructionId }) => {\n  const [DocumentDrawer, _, { closeDrawer, openDrawer }] = useDocumentDrawer({\n    id: instructionId,\n    collectionSlug: PLUGIN_INSTRUCTIONS_TABLE,\n  })\n\n  const fieldProps = useFieldProps()\n  const { type: fieldType, path: pathFromContext, schemaPath } = fieldProps\n\n  const [input, setInput] = useState(null)\n  const [lexicalEditor, setLexicalEditor] = useState<LexicalEditor>()\n  const actionsRef = useRef(null)\n  // Used to show the actions menu on active input fields\n  useEffect(() => {\n    const fieldId = `field-${pathFromContext.replace(/\\./g, '__')}`\n    let inputElement = document.getElementById(fieldId)\n\n    if (!actionsRef.current) return\n    actionsRef.current.setAttribute('for', fieldId)\n\n    if (!inputElement) {\n      if (fieldType === 'richText') {\n        const editorWrapper = findParentWithClass(actionsRef.current, 'field-type')\n        //TODO: Find a better way get rich-text field instance\n        setTimeout(() => {\n          inputElement = editorWrapper.querySelector('div[contenteditable=\"true\"]')\n          // @ts-expect-error\n          setLexicalEditor(inputElement.__lexicalEditor)\n          setInput(inputElement)\n        }, 0)\n      }\n    } else {\n      setInput(inputElement)\n    }\n  }, [pathFromContext, schemaPath, actionsRef])\n\n  useEffect(() => {\n    if (!input || !actionsRef.current) return\n\n    actionsRef.current.classList.add(styles.actions_hidden)\n    input.addEventListener('click', (event) => {\n      document.querySelectorAll('.ai-plugin-active')?.forEach((element) => {\n        element.querySelector(`.${styles.actions}`).classList.add(styles.actions_hidden)\n        element.classList.remove('ai-plugin-active')\n      })\n\n      actionsRef.current.classList.remove(styles.actions_hidden)\n      const parentWithClass = findParentWithClass(event.target, 'field-type')\n      parentWithClass.classList.add('ai-plugin-active')\n    })\n  }, [input, actionsRef])\n\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  const { generate, isLoading } = useGenerate()\n  const { ActiveComponent, Menu } = useMenu({\n    onCompose: async () => {\n      console.log('Composing...')\n      setIsProcessing(true)\n      await generate({\n        action: 'Compose',\n      }).finally(() => {\n        setIsProcessing(false)\n      })\n    },\n    onExpand: async () => {\n      console.log('Expanding...')\n      await generate({\n        action: 'Expand',\n      })\n    },\n    onProofread: async () => {\n      console.log('Proofreading...')\n      await generate({\n        action: 'Proofread',\n      })\n    },\n    onRephrase: async () => {\n      console.log('Rephrasing...')\n      await generate({\n        action: 'Rephrase',\n      })\n    },\n    onSettings: openDrawer,\n    onSimplify: async () => {\n      console.log('Simplifying...')\n      await generate({\n        action: 'Simplify',\n      })\n    },\n  })\n\n  const { setValue } = useField<string>({\n    path: pathFromContext,\n  })\n  const { canRedo, canUndo, redo, undo } = useHistory()\n\n  const setIfValueIsLexicalState = useCallback(\n    (val) => {\n      if (val.root && lexicalEditor) {\n        const editorState = lexicalEditor.parseEditorState(JSON.stringify(val))\n        if (editorState.isEmpty()) return\n\n        lexicalEditor.update(() => {\n          lexicalEditor.setEditorState(editorState)\n        })\n      }\n    },\n    [lexicalEditor],\n  )\n\n  const redoHistoryValue = useCallback(() => {\n    const val = redo()\n    if (val) {\n      setValue(val)\n      setIfValueIsLexicalState(val)\n    }\n  }, [redo, setIfValueIsLexicalState])\n\n  const undoHistoryValue = useCallback(() => {\n    const val = undo()\n    if (val) {\n      setValue(val)\n      setIfValueIsLexicalState(val)\n    }\n  }, [undo, setIfValueIsLexicalState])\n\n  return (\n    <React.Fragment>\n      <label className={`${styles.actions}`} ref={actionsRef}>\n        <DocumentDrawer\n          onSave={() => {\n            closeDrawer()\n          }}\n        />\n        <Popup\n          button={<PluginIcon isLoading={isProcessing || isLoading} />}\n          render={({ close }) => {\n            return <Menu isLoading={isProcessing || isLoading} onClose={close} />\n          }}\n          verticalAlign=\"bottom\"\n        />\n        <ActiveComponent isLoading={isProcessing || isLoading} />\n        <button disabled={!canUndo} onClick={undoHistoryValue} type=\"button\">\n          Undo\n        </button>\n        <button disabled={!canRedo} onClick={redoHistoryValue} type=\"button\">\n          Redo\n        </button>\n      </label>\n      <div>\n        <FieldDescription {...descriptionProps} />\n      </div>\n    </React.Fragment>\n  )\n}\n"],"names":["FieldDescription","Popup","useDocumentDrawer","useField","useFieldProps","React","useCallback","useEffect","useRef","useState","PLUGIN_INSTRUCTIONS_TABLE","PluginIcon","styles","useGenerate","useHistory","useMenu","findParentWithClass","element","className","document","body","classList","contains","parentElement","Actions","descriptionProps","instructionId","DocumentDrawer","_","closeDrawer","openDrawer","id","collectionSlug","fieldProps","type","fieldType","path","pathFromContext","schemaPath","input","setInput","lexicalEditor","setLexicalEditor","actionsRef","fieldId","replace","inputElement","getElementById","current","setAttribute","editorWrapper","setTimeout","querySelector","__lexicalEditor","add","actions_hidden","addEventListener","event","querySelectorAll","forEach","actions","remove","parentWithClass","target","isProcessing","setIsProcessing","generate","isLoading","ActiveComponent","Menu","onCompose","console","log","action","finally","onExpand","onProofread","onRephrase","onSettings","onSimplify","setValue","canRedo","canUndo","redo","undo","setIfValueIsLexicalState","val","root","editorState","parseEditorState","JSON","stringify","isEmpty","update","setEditorState","redoHistoryValue","undoHistoryValue","Fragment","label","ref","onSave","button","render","close","onClose","verticalAlign","disabled","onClick","div"],"mappings":"AAAA;;AAIA,SAASA,gBAAgB,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,iBAAgB;AACpG,OAAOC,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,QAAO;AAEvE,SAASC,yBAAyB,QAAQ,oBAAmB;AAC7D,SAASC,UAAU,QAAQ,oBAAmB;AAC9C,OAAOC,YAAY,uBAAsB;AACzC,SAASC,WAAW,QAAQ,yBAAwB;AACpD,SAASC,UAAU,QAAQ,wBAAuB;AAClD,SAASC,OAAO,QAAQ,qBAAoB;AAE5C,SAASC,oBAAoBC,OAAO,EAAEC,SAAS;IAC7C,wEAAwE;IACxE,IAAI,CAACD,WAAWA,YAAYE,SAASC,IAAI,EAAE;QACzC,OAAO;IACT;IAEA,+DAA+D;IAC/D,IAAIH,QAAQI,SAAS,CAACC,QAAQ,CAACJ,YAAY;QACzC,OAAOD;IACT;IAEA,sDAAsD;IACtD,OAAOD,oBAAoBC,QAAQM,aAAa,EAAEL;AACpD;AAEA,4CAA4C;AAC5C,OAAO,MAAMM,UAAU,CAAC,EAAEC,mBAAmB,CAAC,CAAC,EAAEC,aAAa,EAAE;IAC9D,MAAM,CAACC,gBAAgBC,GAAG,EAAEC,WAAW,EAAEC,UAAU,EAAE,CAAC,GAAG5B,kBAAkB;QACzE6B,IAAIL;QACJM,gBAAgBtB;IAClB;IAEA,MAAMuB,aAAa7B;IACnB,MAAM,EAAE8B,MAAMC,SAAS,EAAEC,MAAMC,eAAe,EAAEC,UAAU,EAAE,GAAGL;IAE/D,MAAM,CAACM,OAAOC,SAAS,GAAG/B,SAAS;IACnC,MAAM,CAACgC,eAAeC,iBAAiB,GAAGjC;IAC1C,MAAMkC,aAAanC,OAAO;IAC1B,uDAAuD;IACvDD,UAAU;QACR,MAAMqC,UAAU,CAAC,MAAM,EAAEP,gBAAgBQ,OAAO,CAAC,OAAO,MAAM,CAAC;QAC/D,IAAIC,eAAe3B,SAAS4B,cAAc,CAACH;QAE3C,IAAI,CAACD,WAAWK,OAAO,EAAE;QACzBL,WAAWK,OAAO,CAACC,YAAY,CAAC,OAAOL;QAEvC,IAAI,CAACE,cAAc;YACjB,IAAIX,cAAc,YAAY;gBAC5B,MAAMe,gBAAgBlC,oBAAoB2B,WAAWK,OAAO,EAAE;gBAC9D,sDAAsD;gBACtDG,WAAW;oBACTL,eAAeI,cAAcE,aAAa,CAAC;oBAC3C,mBAAmB;oBACnBV,iBAAiBI,aAAaO,eAAe;oBAC7Cb,SAASM;gBACX,GAAG;YACL;QACF,OAAO;YACLN,SAASM;QACX;IACF,GAAG;QAACT;QAAiBC;QAAYK;KAAW;IAE5CpC,UAAU;QACR,IAAI,CAACgC,SAAS,CAACI,WAAWK,OAAO,EAAE;QAEnCL,WAAWK,OAAO,CAAC3B,SAAS,CAACiC,GAAG,CAAC1C,OAAO2C,cAAc;QACtDhB,MAAMiB,gBAAgB,CAAC,SAAS,CAACC;YAC/BtC,SAASuC,gBAAgB,CAAC,sBAAsBC,QAAQ,CAAC1C;gBACvDA,QAAQmC,aAAa,CAAC,CAAC,CAAC,EAAExC,OAAOgD,OAAO,CAAC,CAAC,EAAEvC,SAAS,CAACiC,GAAG,CAAC1C,OAAO2C,cAAc;gBAC/EtC,QAAQI,SAAS,CAACwC,MAAM,CAAC;YAC3B;YAEAlB,WAAWK,OAAO,CAAC3B,SAAS,CAACwC,MAAM,CAACjD,OAAO2C,cAAc;YACzD,MAAMO,kBAAkB9C,oBAAoByC,MAAMM,MAAM,EAAE;YAC1DD,gBAAgBzC,SAAS,CAACiC,GAAG,CAAC;QAChC;IACF,GAAG;QAACf;QAAOI;KAAW;IAEtB,MAAM,CAACqB,cAAcC,gBAAgB,GAAGxD,SAAS;IAEjD,MAAM,EAAEyD,QAAQ,EAAEC,SAAS,EAAE,GAAGtD;IAChC,MAAM,EAAEuD,eAAe,EAAEC,IAAI,EAAE,GAAGtD,QAAQ;QACxCuD,WAAW;YACTC,QAAQC,GAAG,CAAC;YACZP,gBAAgB;YAChB,MAAMC,SAAS;gBACbO,QAAQ;YACV,GAAGC,OAAO,CAAC;gBACTT,gBAAgB;YAClB;QACF;QACAU,UAAU;YACRJ,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAG,aAAa;YACXL,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAI,YAAY;YACVN,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;QACAK,YAAYhD;QACZiD,YAAY;YACVR,QAAQC,GAAG,CAAC;YACZ,MAAMN,SAAS;gBACbO,QAAQ;YACV;QACF;IACF;IAEA,MAAM,EAAEO,QAAQ,EAAE,GAAG7E,SAAiB;QACpCiC,MAAMC;IACR;IACA,MAAM,EAAE4C,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGtE;IAEzC,MAAMuE,2BAA2B/E,YAC/B,CAACgF;QACC,IAAIA,IAAIC,IAAI,IAAI9C,eAAe;YAC7B,MAAM+C,cAAc/C,cAAcgD,gBAAgB,CAACC,KAAKC,SAAS,CAACL;YAClE,IAAIE,YAAYI,OAAO,IAAI;YAE3BnD,cAAcoD,MAAM,CAAC;gBACnBpD,cAAcqD,cAAc,CAACN;YAC/B;QACF;IACF,GACA;QAAC/C;KAAc;IAGjB,MAAMsD,mBAAmBzF,YAAY;QACnC,MAAMgF,MAAMH;QACZ,IAAIG,KAAK;YACPN,SAASM;YACTD,yBAAyBC;QAC3B;IACF,GAAG;QAACH;QAAME;KAAyB;IAEnC,MAAMW,mBAAmB1F,YAAY;QACnC,MAAMgF,MAAMF;QACZ,IAAIE,KAAK;YACPN,SAASM;YACTD,yBAAyBC;QAC3B;IACF,GAAG;QAACF;QAAMC;KAAyB;IAEnC,qBACE,MAAChF,MAAM4F,QAAQ;;0BACb,MAACC;gBAAMhF,WAAW,CAAC,EAAEN,OAAOgD,OAAO,CAAC,CAAC;gBAAEuC,KAAKxD;;kCAC1C,KAAChB;wBACCyE,QAAQ;4BACNvE;wBACF;;kCAEF,KAAC5B;wBACCoG,sBAAQ,KAAC1F;4BAAWwD,WAAWH,gBAAgBG;;wBAC/CmC,QAAQ,CAAC,EAAEC,KAAK,EAAE;4BAChB,qBAAO,KAAClC;gCAAKF,WAAWH,gBAAgBG;gCAAWqC,SAASD;;wBAC9D;wBACAE,eAAc;;kCAEhB,KAACrC;wBAAgBD,WAAWH,gBAAgBG;;kCAC5C,KAACkC;wBAAOK,UAAU,CAACxB;wBAASyB,SAASX;wBAAkB9D,MAAK;kCAAS;;kCAGrE,KAACmE;wBAAOK,UAAU,CAACzB;wBAAS0B,SAASZ;wBAAkB7D,MAAK;kCAAS;;;;0BAIvE,KAAC0E;0BACC,cAAA,KAAC5G;oBAAkB,GAAGyB,gBAAgB;;;;;AAI9C,EAAC"}