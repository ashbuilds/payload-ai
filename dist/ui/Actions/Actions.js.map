{"version":3,"sources":["../../../src/ui/Actions/Actions.tsx"],"sourcesContent":["'use client'\n\nimport { FieldDescription, Popup, useDocumentDrawer, useField, useFieldProps } from '@payloadcms/ui'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { PromptContext } from '../../providers/Prompt/index.js'\nimport { useDotFields } from '../../utilities/useDotFields.js'\nimport { useGenerate } from '../../utilities/useGenerate.js'\nimport styles from './actions.module.scss'\nimport { AiIcon3, PluginIcon } from './icons.js'\nimport { useMenu } from './useMenu.js'\nimport LottieAnimation from './LottieAnimation.js'\n// import { LexicalRichTextAdapterProvider } from '@payloadcms/richtext-lexical'\n// import { useEditorConfigContext } from '@payloadcms/richtext-lexical/dist/lexical/config/client/EditorConfigProvider.js'\nimport { getNearestEditorFromDOMNode } from 'lexical'\nfunction findParentWithClass(element, className) {\n  // Base case: if the element is null or we've reached the top of the DOM\n  if (!element || element === document.body) {\n    return null\n  }\n\n  // Check if the current element has the class we're looking for\n  if (element.classList.contains(className)) {\n    return element\n  }\n\n  // Recursively call the function on the parent element\n  return findParentWithClass(element.parentElement, className)\n}\n\n//TODO: Add undo/redo to the actions toolbar\nexport const Actions = ({ descriptionProps, instructionId }) => {\n  const [DocumentDrawer, DocumentDrawerToggler, { closeDrawer, openDrawer }] = useDocumentDrawer({\n    id: instructionId,\n    collectionSlug: 'instructions',\n  })\n\n  const { dotFields } = useDotFields()\n  const fieldProps = useFieldProps()\n  const { path: pathFromContext, schemaPath, type: fieldType } = fieldProps\n  const currentField = useField({\n    path: pathFromContext,\n  })\n\n  const [fieldsInfo, setFieldsInfo] = useState(null)\n  useEffect(() => {\n    if (!dotFields) return\n\n    setFieldsInfo({\n      fields: Object.keys(dotFields),\n      selectedField: {\n        field: currentField,\n        //TODO: Why props need to be passed?\n        props: fieldProps,\n      },\n    })\n  }, [dotFields, currentField, fieldProps])\n\n  const [input, setInput] = useState(null)\n  const [lexicalEditor, setLexicalEditor] = useState()\n  const actionsRef = useRef(null)\n  // Used to show the actions menu on active input fields\n  useEffect(() => {\n    const fieldId = `field-${pathFromContext.replace(/\\./g, '__')}`\n    let inputElement = document.getElementById(fieldId)\n\n    if (!actionsRef.current) return\n    actionsRef.current.setAttribute('for', fieldId)\n\n    if (!inputElement) {\n      if (fieldType === 'richText') {\n        const editorWrapper = findParentWithClass(actionsRef.current, 'field-type')\n        //TODO: Find a better way get rich-text field instance\n        setTimeout(() => {\n          inputElement = editorWrapper.querySelector('div[contenteditable=\"true\"]')\n          // @ts-expect-error\n          setLexicalEditor(inputElement.__lexicalEditor)\n          setInput(inputElement)\n        }, 0)\n      }\n    } else {\n      setInput(inputElement)\n    }\n  }, [pathFromContext, schemaPath, actionsRef])\n\n  useEffect(() => {\n    if (!input || !actionsRef.current) return\n\n    actionsRef.current.classList.add(styles.actions_hidden)\n    input.addEventListener('click', (event) => {\n      document.querySelectorAll('.ai-plugin-active')?.forEach((element) => {\n        element.querySelector(`.${styles.actions}`).classList.add(styles.actions_hidden)\n        element.classList.remove('ai-plugin-active')\n      })\n\n      actionsRef.current.classList.remove(styles.actions_hidden)\n      const parentWithClass = findParentWithClass(event.target, 'field-type')\n      parentWithClass.classList.add('ai-plugin-active')\n    })\n  }, [input, actionsRef])\n\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  const generate = useGenerate({ lexicalEditor })\n  const { ActiveComponent, Menu } = useMenu(\n    { lexicalEditor },\n    {\n      onCompose: async () => {\n        console.log('Composing...')\n        setIsProcessing(true)\n        await generate({\n          action: 'Compose',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onProofread: async () => {\n        console.log('Proofreading...')\n        setIsProcessing(true)\n        await generate({\n          action: 'Proofread',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onRephrase: async () => {\n        console.log('Rephrasing...', !isProcessing)\n        setIsProcessing(true)\n        await generate({\n          action: 'Rephrase',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onExpand: async () => {\n        setIsProcessing(true)\n        await generate({\n          action: 'Expand',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onSimplify: async () => {\n        setIsProcessing(true)\n        await generate({\n          action: 'Simplify',\n        }).finally(() => {\n          setIsProcessing(false)\n        })\n      },\n      onSettings: openDrawer,\n    },\n  )\n\n  return (\n    <React.Fragment>\n      <label className={`${styles.actions}`} ref={actionsRef}>\n        <PromptContext.Provider value={fieldsInfo}>\n          <DocumentDrawer\n            onSave={() => {\n              closeDrawer()\n            }}\n          />\n        </PromptContext.Provider>\n        <Popup\n          button={<PluginIcon isLoading={isProcessing} />}\n          verticalAlign={'bottom'}\n          render={({ close }) => {\n            return <Menu onClose={close} />\n          }}\n        />\n        <ActiveComponent />\n      </label>\n      <div>\n        <FieldDescription {...descriptionProps} />\n      </div>\n    </React.Fragment>\n  )\n}\n"],"names":["FieldDescription","Popup","useDocumentDrawer","useField","useFieldProps","React","useEffect","useRef","useState","PromptContext","useDotFields","useGenerate","styles","PluginIcon","useMenu","findParentWithClass","element","className","document","body","classList","contains","parentElement","Actions","descriptionProps","instructionId","DocumentDrawer","DocumentDrawerToggler","closeDrawer","openDrawer","id","collectionSlug","dotFields","fieldProps","path","pathFromContext","schemaPath","type","fieldType","currentField","fieldsInfo","setFieldsInfo","fields","Object","keys","selectedField","field","props","input","setInput","lexicalEditor","setLexicalEditor","actionsRef","fieldId","replace","inputElement","getElementById","current","setAttribute","editorWrapper","setTimeout","querySelector","__lexicalEditor","add","actions_hidden","addEventListener","event","querySelectorAll","forEach","actions","remove","parentWithClass","target","isProcessing","setIsProcessing","generate","ActiveComponent","Menu","onCompose","console","log","action","finally","onProofread","onRephrase","onExpand","onSimplify","onSettings","Fragment","label","ref","Provider","value","onSave","button","isLoading","verticalAlign","render","close","onClose","div"],"mappings":"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"}