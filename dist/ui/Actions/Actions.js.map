{"version":3,"sources":["../../../src/ui/Actions/Actions.tsx"],"sourcesContent":["'use client'\n\nimport { FieldDescription, Popup, useDocumentDrawer, useField, useFieldProps } from '@payloadcms/ui'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../../defaults.js'\nimport { PluginIcon } from '../Icons/Icons.js'\nimport styles from './actions.module.scss'\nimport { useGenerate } from './hooks/useGenerate.js'\n\nimport { useMenu } from './hooks/menu/useMenu.js'\nimport { UndoRedoActions } from './UndoRedoActions.js'\nimport { useEditorConfigContext } from '@payloadcms/richtext-lexical/client'\nimport { setSafeLexicalState } from '../../utilities/setSafeLexicalState.js'\n\nfunction findParentWithClass(element, className) {\n  // Base case: if the element is null or we've reached the top of the DOM\n  if (!element || element === document.body) {\n    return null\n  }\n\n  // Check if the current element has the class we're looking for\n  if (element.classList.contains(className)) {\n    return element\n  }\n\n  // Recursively call the function on the parent element\n  return findParentWithClass(element.parentElement, className)\n}\n\n//TODO: Add undo/redo to the actions toolbar\nexport const Actions = ({ descriptionProps = {}, instructionId }) => {\n  const [DocumentDrawer, _, { closeDrawer, openDrawer }] = useDocumentDrawer({\n    id: instructionId,\n    collectionSlug: PLUGIN_INSTRUCTIONS_TABLE,\n  })\n\n  const { type: fieldType, path: pathFromContext, schemaPath } = useFieldProps()\n  const { editor: lexicalEditor, editorContainerRef } = useEditorConfigContext()\n\n  // Below snippet is used to show/hide the actions menu on AI enabled fields\n  const [input, setInput] = useState(null)\n  const actionsRef = useRef(null)\n\n  // Set input element for current field\n  useEffect(() => {\n    if (!actionsRef.current) return\n\n    const fieldId = `field-${pathFromContext.replace(/\\./g, '__')}`\n    let inputElement = document.getElementById(fieldId)\n\n    if (!inputElement && fieldType === 'richText') {\n      setInput(editorContainerRef.current)\n    } else {\n      actionsRef.current.setAttribute('for', fieldId)\n      setInput(inputElement)\n    }\n  }, [pathFromContext, schemaPath, actionsRef, editorContainerRef])\n\n  // Show or hide actions menu on field\n  useEffect(() => {\n    if (!input || !actionsRef.current) return\n\n    actionsRef.current.classList.add(styles.actions_hidden)\n    input.addEventListener('click', (event) => {\n      document.querySelectorAll('.ai-plugin-active')?.forEach((element) => {\n        const actionElement = element.querySelector(`.${styles.actions}`)\n        if (actionElement) {\n          actionElement.classList.add(styles.actions_hidden)\n          element.classList.remove('ai-plugin-active')\n        }\n      })\n\n      actionsRef.current.classList.remove(styles.actions_hidden)\n      const parentWithClass = findParentWithClass(event.target, 'field-type')\n      parentWithClass.classList.add('ai-plugin-active')\n    })\n  }, [input, actionsRef])\n\n  const [isProcessing, setIsProcessing] = useState(false)\n  const { generate, isLoading } = useGenerate()\n\n  const { ActiveComponent, Menu } = useMenu({\n    onCompose: async () => {\n      console.log('Composing...')\n      setIsProcessing(true)\n      await generate({\n        action: 'Compose',\n      }).finally(() => {\n        setIsProcessing(false)\n      })\n    },\n    onExpand: async () => {\n      console.log('Expanding...')\n      await generate({\n        action: 'Expand',\n      })\n    },\n    onProofread: async () => {\n      console.log('Proofreading...')\n      await generate({\n        action: 'Proofread',\n      })\n    },\n    onRephrase: async () => {\n      console.log('Rephrasing...')\n      await generate({\n        action: 'Rephrase',\n      })\n    },\n    onSimplify: async () => {\n      console.log('Simplifying...')\n      await generate({\n        action: 'Simplify',\n      })\n    },\n    onSummarize: async () => {\n      console.log('Summarizing...')\n      await generate({\n        action: 'Summarize',\n      })\n    },\n    onTranslate: async (data) => {\n      console.log('Translate...', data)\n      await generate({\n        action: 'Translate',\n        params: data,\n      })\n    },\n    onSettings: openDrawer,\n  })\n\n  const { setValue, value } = useField<string>({\n    path: pathFromContext,\n  })\n\n  const setIfValueIsLexicalState = useCallback((val) => {\n    if (val.root && lexicalEditor) {\n      setSafeLexicalState(JSON.stringify(val), lexicalEditor)\n    }\n\n    // DO NOT PROVIDE lexicalEditor as a dependency, it freaks out and does not update the editor after first undo/redo\n  }, [])\n\n  return (\n    <React.Fragment>\n      <label className={`${styles.actions}`} ref={actionsRef} onClick={(e) => e.preventDefault()}>\n        <DocumentDrawer\n          onSave={() => {\n            closeDrawer()\n          }}\n        />\n        <Popup\n          button={<PluginIcon isLoading={isProcessing || isLoading} />}\n          render={({ close }) => {\n            return <Menu isLoading={isProcessing || isLoading} onClose={close} />\n          }}\n          verticalAlign=\"bottom\"\n        />\n        <ActiveComponent isLoading={isProcessing || isLoading} />\n        <UndoRedoActions\n          onChange={(val) => {\n            setValue(val)\n            setIfValueIsLexicalState(val)\n          }}\n        />\n      </label>\n      <div>\n        <FieldDescription {...descriptionProps} />\n      </div>\n    </React.Fragment>\n  )\n}\n"],"names":["FieldDescription","Popup","useDocumentDrawer","useField","useFieldProps","React","useCallback","useEffect","useRef","useState","PLUGIN_INSTRUCTIONS_TABLE","PluginIcon","styles","useGenerate","useMenu","UndoRedoActions","useEditorConfigContext","setSafeLexicalState","findParentWithClass","element","className","document","body","classList","contains","parentElement","Actions","descriptionProps","instructionId","DocumentDrawer","_","closeDrawer","openDrawer","id","collectionSlug","type","fieldType","path","pathFromContext","schemaPath","editor","lexicalEditor","editorContainerRef","input","setInput","actionsRef","current","fieldId","replace","inputElement","getElementById","setAttribute","add","actions_hidden","addEventListener","event","querySelectorAll","forEach","actionElement","querySelector","actions","remove","parentWithClass","target","isProcessing","setIsProcessing","generate","isLoading","ActiveComponent","Menu","onCompose","console","log","action","finally","onExpand","onProofread","onRephrase","onSimplify","onSummarize","onTranslate","data","params","onSettings","setValue","value","setIfValueIsLexicalState","val","root","JSON","stringify","Fragment","label","ref","onClick","e","preventDefault","onSave","button","render","close","onClose","verticalAlign","onChange","div"],"mappings":"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"}