{"version":3,"sources":["../../../../src/ui/Actions/hooks/useMenu.tsx"],"sourcesContent":["'use client'\n\nimport type { LexicalEditor } from 'lexical'\n\nimport { useField, useFieldProps } from '@payloadcms/ui'\nimport React, { memo, useEffect, useMemo, useState } from 'react'\n\nimport type { BaseItemProps, MenuItems, UseMenuEvents } from '../../../types.js'\n\nimport {\n  DocsAddOnIcon,\n  EditNoteIcon,\n  SegmentIcon,\n  SpellCheckIcon,\n  StylusNoteIcon,\n  SummarizeIcon,\n  TranslateIcon,\n  TuneIcon,\n} from '../../Icons/Icons.js'\nimport styles from '../actions.module.css'\n\nconst Item: React.FC<BaseItemProps> = memo(({ children, disabled, onClick = () => {} }) => (\n  <span\n    className={styles.generate_button}\n    data-disabled={disabled}\n    onClick={!disabled ? onClick : null}\n    onKeyDown={!disabled ? onClick : null}\n    role=\"presentation\"\n  >\n    {children}\n  </span>\n))\n\nconst createMenuItem = (IconComponent, initialText) =>\n  memo(({ children, disabled, hideIcon, onClick }: BaseItemProps) => (\n    <Item disabled={disabled} onClick={onClick}>\n      {hideIcon || <IconComponent size={18} />}\n      {children || initialText}\n    </Item>\n  ))\n\nconst Proofread = createMenuItem(SpellCheckIcon, 'Proofread')\nconst Rephrase = createMenuItem(EditNoteIcon, 'Rephrase')\nconst Translate = createMenuItem(TranslateIcon, 'Translate')\nconst Expand = createMenuItem(DocsAddOnIcon, 'Expand')\nconst Summarize = createMenuItem(SummarizeIcon, 'Summarize')\nconst Simplify = createMenuItem(SegmentIcon, 'Simplify')\nconst Compose = createMenuItem(StylusNoteIcon, 'Compose')\nconst Settings = createMenuItem(TuneIcon, 'Settings')\n\ntype MenuItemsMapType = {\n  component: React.FC<BaseItemProps>\n  excludedFor?: string[]\n  loadingText?: string\n  name: MenuItems\n}\n\nconst MenuItemsMap: MenuItemsMapType[] = [\n  { name: 'Proofread', component: Proofread, excludedFor: ['upload'], loadingText: 'Proofreading' },\n  { name: 'Rephrase', component: Rephrase, excludedFor: ['upload'], loadingText: 'Rephrasing' },\n  { name: 'Translate', component: Translate, excludedFor: ['upload'], loadingText: 'Translating' },\n  { name: 'Expand', component: Expand, excludedFor: ['upload', 'text'], loadingText: 'Expanding' },\n  {\n    name: 'Summarize',\n    component: Summarize,\n    excludedFor: ['upload', 'text'],\n    loadingText: 'Summarizing',\n  },\n  { name: 'Simplify', component: Simplify, excludedFor: ['upload'], loadingText: 'Simplifying' },\n  { name: 'Compose', component: Compose, loadingText: 'Composing' },\n  { name: 'Settings', component: Settings },\n]\n\nconst getActiveComponent = (ac) => {\n  switch (ac) {\n    case 'Proofread':\n      return Proofread\n    case 'Rephrase':\n      return Rephrase\n    case 'Compose':\n      return Compose\n    default:\n      return Rephrase\n  }\n}\n\ntype UseMenuProps = {\n  lexicalEditor: LexicalEditor\n}\n\nexport const useMenu = ({ lexicalEditor }: UseMenuProps, menuEvents: UseMenuEvents) => {\n  const { type: fieldType, path: pathFromContext } = useFieldProps()\n  const field = useField({ path: pathFromContext })\n  const [activeComponent, setActiveComponent] = useState<MenuItems>('Rephrase')\n\n  const { initialValue, value } = field\n\n  useEffect(() => {\n    if (!value) {\n      setActiveComponent('Compose')\n      return\n    }\n\n    if (MenuItemsMap.some((i) => i.excludedFor?.includes(fieldType))) {\n      setActiveComponent('Compose')\n      return\n    }\n\n    if (typeof value === 'string' && value !== initialValue) {\n      setActiveComponent('Proofread')\n    } else {\n      setActiveComponent('Rephrase')\n    }\n  }, [initialValue, value, fieldType, lexicalEditor])\n\n  const MemoizedActiveComponent = useMemo(() => {\n    return ({ isLoading }) => {\n      const ActiveComponent = getActiveComponent(activeComponent)\n      const activeItem = MenuItemsMap.find((i) => i.name === activeComponent)\n      return (\n        <ActiveComponent disabled={isLoading} hideIcon onClick={menuEvents[`on${activeComponent}`]}>\n          {isLoading && activeItem.loadingText}\n        </ActiveComponent>\n      )\n    }\n  }, [activeComponent, menuEvents])\n\n  const filteredMenuItems = useMemo(\n    () =>\n      MenuItemsMap.filter((i) => i.name !== activeComponent && !i.excludedFor?.includes(fieldType)),\n    [activeComponent, fieldType],\n  )\n\n  const MemoizedMenu = useMemo(() => {\n    return ({ isLoading, onClose }) => (\n      <div className={styles.menu}>\n        {filteredMenuItems.map((i) => {\n          const Item = i.component\n          return (\n            <Item\n              disabled={isLoading}\n              key={i.name}\n              onClick={() => {\n                if (i.name !== 'Settings') {\n                  setActiveComponent(i.name)\n                }\n\n                menuEvents[`on${i.name}`]()\n                onClose()\n              }}\n            >\n              {isLoading && i.loadingText}\n            </Item>\n          )\n        })}\n      </div>\n    )\n  }, [filteredMenuItems, menuEvents])\n\n  // Simply return the object without additional useMemo\n  return {\n    ActiveComponent: MemoizedActiveComponent,\n    Menu: MemoizedMenu,\n  }\n}\n"],"names":["useField","useFieldProps","React","memo","useEffect","useMemo","useState","DocsAddOnIcon","EditNoteIcon","SegmentIcon","SpellCheckIcon","StylusNoteIcon","SummarizeIcon","TranslateIcon","TuneIcon","styles","Item","children","disabled","onClick","span","className","generate_button","data-disabled","onKeyDown","role","createMenuItem","IconComponent","initialText","hideIcon","size","Proofread","Rephrase","Translate","Expand","Summarize","Simplify","Compose","Settings","MenuItemsMap","name","component","excludedFor","loadingText","getActiveComponent","ac","useMenu","lexicalEditor","menuEvents","type","fieldType","path","pathFromContext","field","activeComponent","setActiveComponent","initialValue","value","some","i","includes","MemoizedActiveComponent","isLoading","ActiveComponent","activeItem","find","filteredMenuItems","filter","MemoizedMenu","onClose","div","menu","map","Menu"],"mappings":"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"}