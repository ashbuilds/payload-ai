{"version":3,"sources":["../../../../src/ui/Actions/hooks/useGenerate.ts"],"sourcesContent":["import type { LexicalEditor } from 'lexical'\n\nimport { useField, useFieldProps, useForm, useLocale } from '@payloadcms/ui'\nimport { useCompletion, experimental_useObject as useObject } from 'ai/react'\nimport { useCallback, useEffect } from 'react'\n\nimport type { GenerateTextarea, MenuItems } from '../../../types.js'\n\nimport { DocumentSchema } from '../../../ai/RichTextSchema.js'\nimport {\n  PLUGIN_API_ENDPOINT_GENERATE,\n  PLUGIN_API_ENDPOINT_GENERATE_UPLOAD,\n} from '../../../defaults.js'\nimport { useInstructions } from '../../../providers/InstructionsProvider/hook.js'\nimport { setSafeLexicalState } from '../../../utilities/setSafeLexicalState.js'\nimport { useHistory } from './useHistory.js'\n\ntype UseGenerate = {\n  lexicalEditor: LexicalEditor\n}\n\n//TODO: DONATION IDEA - Add a url to donate in cli when user installs the plugin and uses it for couple of times.\nexport const useGenerate = ({ lexicalEditor }: UseGenerate) => {\n  const { type, path: pathFromContext, schemaPath } = useFieldProps()\n\n  //TODO: This should be dynamic, i think it was the part of component props but its not inside useFieldProps\n  const relationTo = 'media'\n\n  const { setValue } = useField<string>({\n    path: pathFromContext,\n  })\n\n  const { set: setHistory } = useHistory()\n  const { id: instructionId } = useInstructions({\n    path: schemaPath,\n  })\n\n  const { getData } = useForm()\n  const localFromContext = useLocale()\n\n  const {\n    isLoading: loadingObject,\n    object,\n    stop, // TODO: Implement this function\n    submit,\n  } = useObject({\n    api: `/api${PLUGIN_API_ENDPOINT_GENERATE}`,\n    onError: (error) => {\n      console.error('Error generating object:', error)\n    },\n    onFinish: ({ object }) => {\n      setHistory(object)\n    },\n    schema: DocumentSchema,\n  })\n\n  useEffect(() => {\n    if (!object) return\n\n    requestAnimationFrame(() => {\n      if (!lexicalEditor) {\n        setValue(object)\n        return\n      }\n\n      // Currently this is being used as setValue for RichText component does not render new changes right away.\n      setSafeLexicalState(object, lexicalEditor)\n    })\n  }, [object])\n\n  const {\n    complete,\n    completion,\n    isLoading: loadingCompletion,\n  } = useCompletion({\n    api: `/api${PLUGIN_API_ENDPOINT_GENERATE}`,\n    onError: (error) => {\n      console.error('Error generating text:', error)\n    },\n    onFinish: (prompt, result) => {\n      setHistory(result)\n    },\n    streamProtocol: 'data',\n  })\n\n  useEffect(() => {\n    if (!completion) return\n\n    requestAnimationFrame(() => {\n      setValue(completion)\n    })\n  }, [completion])\n\n  const streamObject = useCallback(\n    ({ action = 'Compose' }: { action: MenuItems }) => {\n      const doc = getData()\n      const options = {\n        action,\n        instructionId,\n      }\n\n      submit({\n        doc,\n        locale: localFromContext?.code,\n        options,\n      })\n    },\n    [getData, localFromContext?.code, instructionId],\n  )\n\n  const streamText = useCallback(\n    async ({ action = 'Compose' }: { action: MenuItems }) => {\n      const doc = getData()\n\n      const options = {\n        action,\n        instructionId,\n      }\n\n      await complete('', {\n        body: {\n          doc,\n          locale: localFromContext?.code,\n          options,\n        },\n      })\n    },\n    [getData, localFromContext?.code, instructionId],\n  )\n\n  const generateUpload = useCallback(async () => {\n    const doc = getData()\n    return fetch(`/api${PLUGIN_API_ENDPOINT_GENERATE_UPLOAD}`, {\n      body: JSON.stringify({\n        doc,\n        locale: localFromContext?.code,\n        options: {\n          instructionId,\n          uploadCollectionSlug: relationTo,\n        },\n      } satisfies Parameters<GenerateTextarea>[0]),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    })\n      .then(async (generatedImageResponse) => {\n        if (generatedImageResponse.ok) {\n          const { result: generatedImage } = await generatedImageResponse.json()\n          setValue(generatedImage?.id)\n        } else {\n          const { errors = [] } = await generatedImageResponse.json()\n          const errStr = errors.map((error) => error.message).join(', ')\n          throw new Error(errStr)\n        }\n        return generatedImageResponse\n      })\n      .catch((error) => {\n        console.error('Error generating image', error)\n      })\n  }, [getData, localFromContext?.code, instructionId, relationTo, setValue])\n\n  const generate = useCallback(\n    async (options?: { action: MenuItems }) => {\n      if (type === 'richText') {\n        return streamObject(options)\n      }\n\n      if (['text', 'textarea'].includes(type)) {\n        return streamText(options)\n      }\n      if (type === 'upload') {\n        return generateUpload()\n      }\n    },\n    [generateUpload, streamObject, streamText, type],\n  )\n\n  return {\n    generate,\n    isLoading: loadingCompletion || loadingObject,\n  }\n}\n"],"names":["useField","useFieldProps","useForm","useLocale","useCompletion","experimental_useObject","useObject","useCallback","useEffect","DocumentSchema","PLUGIN_API_ENDPOINT_GENERATE","PLUGIN_API_ENDPOINT_GENERATE_UPLOAD","useInstructions","setSafeLexicalState","useHistory","useGenerate","lexicalEditor","type","path","pathFromContext","schemaPath","relationTo","setValue","set","setHistory","id","instructionId","getData","localFromContext","isLoading","loadingObject","object","stop","submit","api","onError","error","console","onFinish","schema","requestAnimationFrame","complete","completion","loadingCompletion","prompt","result","streamProtocol","streamObject","action","doc","options","locale","code","streamText","body","generateUpload","fetch","JSON","stringify","uploadCollectionSlug","credentials","headers","method","then","generatedImageResponse","ok","generatedImage","json","errors","errStr","map","message","join","Error","catch","generate","includes"],"mappings":"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"}