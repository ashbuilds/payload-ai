{"version":3,"sources":["../../../../src/ui/Actions/hooks/useGenerate.ts"],"sourcesContent":["import type { ClientCollectionConfig, UploadField } from 'payload'\n\nimport { useEditorConfigContext } from '@payloadcms/richtext-lexical/client'\nimport {\n  useConfig,\n  useDocumentInfo,\n  useField,\n  useFieldProps,\n  useForm,\n  useLocale,\n} from '@payloadcms/ui'\nimport { useCompletion, experimental_useObject as useObject } from 'ai/react'\nimport { useCallback, useEffect } from 'react'\n\nimport type { ActionMenuItems, GenerateTextarea } from '../../../types.js'\n\nimport {\n  PLUGIN_API_ENDPOINT_GENERATE,\n  PLUGIN_API_ENDPOINT_GENERATE_UPLOAD,\n  PLUGIN_INSTRUCTIONS_TABLE,\n} from '../../../defaults.js'\nimport { useInstructions } from '../../../providers/InstructionsProvider/hook.js'\nimport { getFieldBySchemaPath } from '../../../utilities/getFieldBySchemaPath.js'\nimport { setSafeLexicalState } from '../../../utilities/setSafeLexicalState.js'\nimport { useHistory } from './useHistory.js'\nimport { jsonSchemaToZod } from '../../../utilities/jsonToZod.js'\n\ntype ActionCallbackParams = { action: ActionMenuItems; params?: unknown }\n\n//TODO: DONATION IDEA - Add a url to donate in cli when user installs the plugin and uses it for couple of times.\nexport const useGenerate = () => {\n  const { type, path: pathFromContext, schemaPath } = useFieldProps()\n\n  const editorConfigContext = useEditorConfigContext()\n  const { editor, focusedEditor } = editorConfigContext\n\n  const { docConfig } = useDocumentInfo()\n\n  const { setValue } = useField<string>({\n    path: pathFromContext,\n  })\n\n  const { set: setHistory } = useHistory()\n  const { id: instructionId } = useInstructions({\n    path: schemaPath,\n  })\n\n  const { getData } = useForm()\n  const localFromContext = useLocale()\n  const { collections } = useConfig()\n  const collection = collections.find((collection) => collection.slug === PLUGIN_INSTRUCTIONS_TABLE)\n  const { custom: { editorConfig } = {} } = collection.admin\n  const { schema: DocumentSchema = {} } = editorConfig || {}\n  const zodSchema = jsonSchemaToZod(DocumentSchema)\n\n  const {\n    isLoading: loadingObject,\n    // @ts-ignore - Object execssivily deep issue\n    object,\n    stop, // TODO: Implement this function\n    submit,\n  } = useObject({\n    api: `/api${PLUGIN_API_ENDPOINT_GENERATE}`,\n    onError: (error) => {\n      console.error('Error generating object:', error)\n    },\n    onFinish: (result) => {\n      console.log('onFinish: result', result)\n      //TODO: Sometimes object is undefined?!\n      if (result.object) {\n        setHistory(result.object)\n        setValue(result.object)\n      }\n    },\n    schema: zodSchema,\n  })\n\n  useEffect(() => {\n    if (!object) return\n\n    requestAnimationFrame(() => {\n      if (!editor) {\n        setValue(object)\n        return\n      }\n\n      // Currently this is being used as setValue for RichText component does not render new changes right away.\n      setSafeLexicalState(object, editor)\n    })\n  }, [object])\n\n  const {\n    complete,\n    completion,\n    isLoading: loadingCompletion,\n  } = useCompletion({\n    api: `/api${PLUGIN_API_ENDPOINT_GENERATE}`,\n    onError: (error) => {\n      console.error('Error generating text:', error)\n    },\n    onFinish: (prompt, result) => {\n      setHistory(result)\n    },\n    streamProtocol: 'data',\n  })\n\n  useEffect(() => {\n    if (!completion) return\n\n    requestAnimationFrame(() => {\n      setValue(completion)\n    })\n  }, [completion])\n\n  const streamObject = useCallback(\n    ({ action = 'Compose', params }: ActionCallbackParams) => {\n      const doc = getData()\n      const options = {\n        action,\n        actionParams: params,\n        instructionId,\n      }\n\n      submit({\n        doc,\n        locale: localFromContext?.code,\n        options,\n      })\n    },\n    [getData, localFromContext?.code, instructionId],\n  )\n\n  const streamText = useCallback(\n    async ({ action = 'Compose', params }: ActionCallbackParams) => {\n      const doc = getData()\n\n      const options = {\n        action,\n        actionParams: params,\n        instructionId,\n      }\n\n      await complete('', {\n        body: {\n          doc,\n          locale: localFromContext?.code,\n          options,\n        },\n      })\n    },\n    [getData, localFromContext?.code, instructionId],\n  )\n\n  const generateUpload = useCallback(async () => {\n    const doc = getData()\n\n    const fieldInfo = getFieldBySchemaPath(\n      docConfig as ClientCollectionConfig,\n      schemaPath,\n    ) as UploadField\n\n    return fetch(`/api${PLUGIN_API_ENDPOINT_GENERATE_UPLOAD}`, {\n      body: JSON.stringify({\n        doc,\n        locale: localFromContext?.code,\n        options: {\n          instructionId,\n          uploadCollectionSlug: fieldInfo.relationTo || 'media',\n        },\n      } satisfies Parameters<GenerateTextarea>[0]),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    })\n      .then(async (uploadResponse) => {\n        if (uploadResponse.ok) {\n          const { result } = await uploadResponse.json()\n          if (!result) throw new Error('generateUpload: Something went wrong')\n\n          setValue(result?.id)\n          setHistory(result?.id)\n        } else {\n          const { errors = [] } = await uploadResponse.json()\n          const errStr = errors.map((error) => error.message).join(', ')\n          throw new Error(errStr)\n        }\n        return uploadResponse\n      })\n      .catch((error) => {\n        console.error('Error generating your upload', error)\n      })\n  }, [getData, localFromContext?.code, instructionId, setValue])\n\n  const generate = useCallback(\n    async (options?: ActionCallbackParams) => {\n      if (type === 'richText') {\n        return streamObject(options)\n      }\n\n      if (['text', 'textarea'].includes(type)) {\n        return streamText(options)\n      }\n\n      if (type === 'upload') {\n        return generateUpload()\n      }\n    },\n    [generateUpload, streamObject, streamText, type],\n  )\n\n  return {\n    generate,\n    isLoading: loadingCompletion || loadingObject,\n  }\n}\n"],"names":["useEditorConfigContext","useConfig","useDocumentInfo","useField","useFieldProps","useForm","useLocale","useCompletion","experimental_useObject","useObject","useCallback","useEffect","PLUGIN_API_ENDPOINT_GENERATE","PLUGIN_API_ENDPOINT_GENERATE_UPLOAD","PLUGIN_INSTRUCTIONS_TABLE","useInstructions","getFieldBySchemaPath","setSafeLexicalState","useHistory","jsonSchemaToZod","useGenerate","type","path","pathFromContext","schemaPath","editorConfigContext","editor","focusedEditor","docConfig","setValue","set","setHistory","id","instructionId","getData","localFromContext","collections","collection","find","slug","custom","editorConfig","admin","schema","DocumentSchema","zodSchema","isLoading","loadingObject","object","stop","submit","api","onError","error","console","onFinish","result","log","requestAnimationFrame","complete","completion","loadingCompletion","prompt","streamProtocol","streamObject","action","params","doc","options","actionParams","locale","code","streamText","body","generateUpload","fieldInfo","fetch","JSON","stringify","uploadCollectionSlug","relationTo","credentials","headers","method","then","uploadResponse","ok","json","Error","errors","errStr","map","message","join","catch","generate","includes"],"mappings":"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"}