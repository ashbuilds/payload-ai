{"version":3,"sources":["../../../src/ui/Actions/UndoRedoActions.tsx"],"sourcesContent":["import { useHistory } from './hooks/useHistory.js'\nimport React, { MouseEventHandler, useCallback } from 'react'\n\nexport const UndoRedoActions = ({ onChange }: { onChange: (val: unknown) => void }) => {\n  const { canRedo, canUndo, redo, undo } = useHistory()\n\n  const redoHistoryValue = useCallback<MouseEventHandler>(\n    (event) => {\n      event.stopPropagation()\n\n      const value = redo()\n      if (value) {\n        onChange(value)\n      }\n    },\n    [redo],\n  )\n\n  const undoHistoryValue = useCallback<MouseEventHandler>(\n    (event) => {\n      event.stopPropagation()\n\n      const value = undo()\n      if (value) {\n        onChange(value)\n      }\n    },\n    [undo],\n  )\n\n  if (!canUndo && !canRedo) return null\n\n  return (\n    <>\n      <button onClick={undoHistoryValue} type=\"button\" disabled={!canUndo}>\n        Undo\n      </button>\n      <button onClick={redoHistoryValue} type=\"button\" disabled={!canRedo}>\n        Redo\n      </button>\n    </>\n  )\n}\n"],"names":["useHistory","React","useCallback","UndoRedoActions","onChange","canRedo","canUndo","redo","undo","redoHistoryValue","event","stopPropagation","value","undoHistoryValue","button","onClick","type","disabled"],"mappings":";AAAA,SAASA,UAAU,QAAQ,wBAAuB;AAClD,OAAOC,SAA4BC,WAAW,QAAQ,QAAO;AAE7D,OAAO,MAAMC,kBAAkB,CAAC,EAAEC,QAAQ,EAAwC;IAChF,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGR;IAEzC,MAAMS,mBAAmBP,YACvB,CAACQ;QACCA,MAAMC,eAAe;QAErB,MAAMC,QAAQL;QACd,IAAIK,OAAO;YACTR,SAASQ;QACX;IACF,GACA;QAACL;KAAK;IAGR,MAAMM,mBAAmBX,YACvB,CAACQ;QACCA,MAAMC,eAAe;QAErB,MAAMC,QAAQJ;QACd,IAAII,OAAO;YACTR,SAASQ;QACX;IACF,GACA;QAACJ;KAAK;IAGR,IAAI,CAACF,WAAW,CAACD,SAAS,OAAO;IAEjC,qBACE;;0BACE,KAACS;gBAAOC,SAASF;gBAAkBG,MAAK;gBAASC,UAAU,CAACX;0BAAS;;0BAGrE,KAACQ;gBAAOC,SAASN;gBAAkBO,MAAK;gBAASC,UAAU,CAACZ;0BAAS;;;;AAK3E,EAAC"}