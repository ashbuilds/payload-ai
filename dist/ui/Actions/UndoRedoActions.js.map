{"version":3,"sources":["../../../src/ui/Actions/UndoRedoActions.tsx"],"sourcesContent":["import { useHistory } from './hooks/useHistory.js'\nimport React, { useCallback } from 'react'\n\nexport const UndoRedoActions = ({ onChange }: { onChange: (val: unknown) => void }) => {\n  const { canRedo, canUndo, redo, undo } = useHistory()\n\n  const redoHistoryValue = useCallback(() => {\n    const val = redo()\n    if (val) {\n      onChange(val)\n    }\n  }, [redo])\n\n  const undoHistoryValue = useCallback(() => {\n    const val = undo()\n    if (val) {\n      onChange(val)\n    }\n  }, [undo])\n\n  if (!canUndo && !canRedo) return null\n\n  return (\n    <>\n      <button onClick={undoHistoryValue} type=\"button\" disabled={!canUndo}>\n        Undo\n      </button>\n      <button onClick={redoHistoryValue} type=\"button\" disabled={!canRedo}>\n        Redo\n      </button>\n    </>\n  )\n}\n"],"names":["useHistory","React","useCallback","UndoRedoActions","onChange","canRedo","canUndo","redo","undo","redoHistoryValue","val","undoHistoryValue","button","onClick","type","disabled"],"mappings":";AAAA,SAASA,UAAU,QAAQ,wBAAuB;AAClD,OAAOC,SAASC,WAAW,QAAQ,QAAO;AAE1C,OAAO,MAAMC,kBAAkB,CAAC,EAAEC,QAAQ,EAAwC;IAChF,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGR;IAEzC,MAAMS,mBAAmBP,YAAY;QACnC,MAAMQ,MAAMH;QACZ,IAAIG,KAAK;YACPN,SAASM;QACX;IACF,GAAG;QAACH;KAAK;IAET,MAAMI,mBAAmBT,YAAY;QACnC,MAAMQ,MAAMF;QACZ,IAAIE,KAAK;YACPN,SAASM;QACX;IACF,GAAG;QAACF;KAAK;IAET,IAAI,CAACF,WAAW,CAACD,SAAS,OAAO;IAEjC,qBACE;;0BACE,KAACO;gBAAOC,SAASF;gBAAkBG,MAAK;gBAASC,UAAU,CAACT;0BAAS;;0BAGrE,KAACM;gBAAOC,SAASJ;gBAAkBK,MAAK;gBAASC,UAAU,CAACV;0BAAS;;;;AAK3E,EAAC"}