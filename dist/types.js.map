{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type { Collection, Endpoint, Field, GroupField } from 'payload'\nimport { CSSProperties, MouseEventHandler } from 'react'\nimport { LexicalBaseNode } from './ai/editor/lexical.schema.js'\n\nexport interface PluginConfig {\n  collections: {\n    [key: string]: boolean\n  }\n  fields?: Field[]\n  globals?: string[]\n  interfaceName?: string\n  editorConfig?: { nodes: (typeof LexicalBaseNode)[] }\n  debugging?: boolean\n}\n\nexport interface GenerationModel {\n  fields: string[]\n  handler?: (payload: any, options: any) => Promise<any>\n  id: string\n  name: string\n  output: 'audio' | 'file' | 'image' | 'json' | 'text' | 'video'\n  settings?: GroupField\n  supportsPromptOptimization?: boolean\n}\n\nexport interface GenerationConfig {\n  models: GenerationModel[]\n  provider: string\n}\n\nexport type GenerateTextarea<T = any> = (args: {\n  doc: T\n  locale?: string\n  options?: any\n}) => Promise<string> | string\n\nexport interface Instructions {\n  'collection-slug': string\n  id: string\n  'model-id': string\n  prompt: string\n}\n\nexport interface Endpoints {\n  textarea: Omit<Endpoint, 'root'>\n  upload: Omit<Endpoint, 'root'>\n}\n\nexport type ActionMenuItems =\n  | 'Compose'\n  | 'Expand'\n  | 'Proofread'\n  | 'Rephrase'\n  | 'Settings'\n  | 'Simplify'\n  | 'Summarize'\n  | 'Tone'\n  | 'Translate'\n\nexport type ActionMenuEvents =\n  | 'onCompose'\n  | 'onExpand'\n  | 'onProofread'\n  | 'onRephrase'\n  | 'onSettings'\n  | 'onSimplify'\n  | 'onSummarize'\n  | 'onTone'\n  | 'onTranslate'\n\nexport type UseMenuEvents = {\n  [key in ActionMenuEvents]?: (data?: unknown) => void\n}\n\nexport type BaseItemProps<T = any> = {\n  children?: React.ReactNode\n  disabled?: boolean\n  hideIcon?: boolean\n  onClick: (data?: unknown) => void\n  onMouseEnter?: MouseEventHandler<T> | undefined\n  onMouseLeave?: MouseEventHandler<T> | undefined\n  style?: CSSProperties | undefined\n  isMenu?: boolean\n  isActive?: boolean\n}\n\n/**\n * This interface was referenced by `Config`'s JSON-Schema\n * via the `definition` \"plugin-ai-instructions\".\n */\nexport interface PluginAiInstruction {\n  id: string\n  'schema-path'?: string | null\n  'field-type'?: ('text' | 'textarea' | 'upload' | 'richText') | null\n  'model-id'?: ('openai-gpt-text' | 'dall-e' | 'tts' | 'openai-gpt-object') | null\n  prompt?: string | null\n  'openai-gpt-text-settings'?: {\n    model?: ('gpt-4o' | 'gpt-4-turbo' | 'gpt-4o-mini' | 'gpt-3.5-turbo') | null\n  }\n  'dalle-e-settings'?: {\n    version?: ('dall-e-3' | 'dall-e-2') | null\n    size?: ('256x256' | '512x512' | '1024x1024' | '1792x1024' | '1024x1792') | null\n    style?: ('vivid' | 'natural') | null\n    'enable-prompt-optimization'?: boolean | null\n  }\n  'openai-tts-settings'?: {\n    voice?: ('alloy' | 'echo' | 'fable' | 'onyx' | 'nova' | 'shimmer') | null\n    model?: ('tts-1' | 'tts-1-hd') | null\n    response_format?: ('mp3' | 'opus' | 'aac' | 'flac' | 'wav' | 'pcm') | null\n    speed?: number | null\n  }\n  'openai-gpt-object-settings'?: {\n    model?: ('gpt-4o' | 'gpt-4-turbo' | 'gpt-4o-mini' | 'gpt-4o-2024-08-06') | null\n    system?: string | null\n    layout?: string | null\n  }\n  updatedAt: string\n  createdAt: string\n}\n"],"names":[],"mappings":"AAsFA;;;CAGC,GACD,WA4BC"}