{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type { Endpoint, Field, GroupField } from 'payload'\nimport { CSSProperties, MouseEventHandler } from 'react'\n\nexport interface PluginConfig {\n  collections?: string[]\n  fields?: Field[]\n  globals?: string[]\n  interfaceName?: string\n}\n\nexport interface GenerationModel {\n  fields: string[]\n  handler?: (payload: any, options: any) => Promise<any>\n  id: string\n  name: string\n  output: 'audio' | 'file' | 'image' | 'json' | 'text' | 'video'\n  settings?: GroupField\n  supportsPromptOptimization?: boolean\n}\n\nexport interface GenerationConfig {\n  models: GenerationModel[]\n  provider: string\n}\n\nexport type GenerateTextarea<T = any> = (args: {\n  doc: T\n  locale?: string\n  options?: any\n}) => Promise<string> | string\n\nexport interface Instructions {\n  'collection-slug': string\n  id: string\n  'model-id': string\n  prompt: string\n}\n\nexport interface Endpoints {\n  textarea: Omit<Endpoint, 'root'>\n  upload: Omit<Endpoint, 'root'>\n}\n\nexport type ActionMenuItems =\n  | 'Compose'\n  | 'Expand'\n  | 'Proofread'\n  | 'Rephrase'\n  | 'Settings'\n  | 'Simplify'\n  | 'Summarize'\n  | 'Tone'\n  | 'Translate'\n\nexport type ActionMenuEvents =\n  | 'onCompose'\n  | 'onExpand'\n  | 'onProofread'\n  | 'onRephrase'\n  | 'onSettings'\n  | 'onSimplify'\n  | 'onSummarize'\n  | 'onTone'\n  | 'onTranslate'\n\nexport type UseMenuEvents = {\n  [key in ActionMenuEvents]?: (data?: unknown) => void\n}\n\nexport type BaseItemProps<T = any> = {\n  children?: React.ReactNode\n  disabled?: boolean\n  hideIcon?: boolean\n  onClick: (data?: unknown) => void\n  onMouseEnter?: MouseEventHandler<T> | undefined\n  onMouseLeave?: MouseEventHandler<T> | undefined\n  style?: CSSProperties | undefined\n  isMenu?: boolean\n  isActive?: boolean\n}\n"],"names":[],"mappings":"AAqEA,WAUC"}