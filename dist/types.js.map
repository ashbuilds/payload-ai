{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type { JSONSchema } from 'openai/lib/jsonschema'\nimport type { ImageGenerateParams } from 'openai/resources/images'\nimport type {\n  CollectionConfig,\n  CollectionSlug,\n  DataFromCollectionSlug,\n  Endpoint,\n  Field,\n  File,\n  GlobalConfig,\n  GroupField,\n  PayloadRequest,\n  TypedCollection,\n} from 'payload'\nimport type { CSSProperties, MouseEventHandler } from 'react'\n\nimport type {PLUGIN_INSTRUCTIONS_TABLE} from \"./defaults.js\";\n\nexport interface PluginConfigAccess {\n  /**\n   * Control access to AI generation features (generate text, images, audio)\n   * @default () => !!req.user (requires authentication)\n   */\n  generate?: ({ req }: { req: PayloadRequest }) => Promise<boolean> | boolean\n  /**\n   * Control access to AI settings/configuration\n   * @default () => !!req.user (requires authentication)\n   */\n  settings?: ({ req }: { req: PayloadRequest }) => Promise<boolean> | boolean\n}\n\nexport interface PluginOptions {\n  /**\n   * Provide local tags to filter language options from the Translate Menu\n   * Check for the available local tags,\n   * visit: https://www.npmjs.com/package/locale-codes\n   * Example: [\"en-US\", \"zh-SG\", \"zh-CN\", \"en\"]\n   */\n  enabledLanguages?: string[]\n}\n\nexport type PluginConfigMediaUploadFunction = (\n  result: { data: Record<any, any>; file: File },\n  {\n    collection,\n    request,\n  }: {\n    collection: CollectionSlug\n    request: PayloadRequest\n  },\n) => Promise<DataFromCollectionSlug<CollectionSlug>>\n\nexport interface PluginConfig {\n  /**\n   * Access control configuration for AI features\n   * By default, all AI features require authentication\n   */\n  access?: PluginConfigAccess\n  collections: {\n    [key: CollectionSlug]: boolean\n  }\n  debugging?: boolean\n  disableSponsorMessage?: boolean\n  editorConfig?: { nodes: JSONSchema[] }\n  fields?: Field[]\n  generatePromptOnInit?: boolean\n  generationModels?: ((defaultModels: GenerationModel[]) => GenerationModel[]) | GenerationModel[]\n  globals?: {\n    [key: GlobalConfig['slug']]: boolean\n  }\n  interfaceName?: string\n  mediaUpload?: PluginConfigMediaUploadFunction\n  options?: PluginOptions\n  // Override the instructions collection config\n  overrideInstructions?: Partial<CollectionConfig>\n  promptFields?: PromptField[]\n  /**\n   * Custom action prompts for AI text generation\n   * If not provided, uses default prompts\n   * You can access default prompts by importing { defaultPrompts } from '@ai-stack/payloadcms'\n   */\n  prompts?: ActionPrompt[]\n  /**\n   * Custom seed prompt function for generating field-specific prompts\n   * If not provided, uses default seed prompt function\n   * You can access default seed prompts by importing { defaultSeedPrompts } from '@ai-stack/payloadcms'\n  */\n  seedPrompts?: SeedPromptFunction\n  uploadCollectionSlug?: CollectionSlug\n}\n\nexport interface GenerationModel {\n  fields: string[]\n  generateText?: (prompt: string, system: string) => Promise<string>\n  handler?: (prompt: string, options: any) => Promise<any> | Response\n  id: string\n  name: string\n  output: 'audio' | 'file' | 'image' | 'json' | 'text' | 'video'\n  settings?: GroupField\n  supportsPromptOptimization?: boolean\n}\n\nexport interface GenerationConfig {\n  models: GenerationModel[]\n  provider: string\n}\n\nexport type GenerateTextarea<T = any> = (args: {\n  collectionSlug: CollectionSlug\n  doc: T\n  documentId?: number | string\n  locale?: string\n  options?: any\n}) => Promise<string> | string\n\nexport interface Endpoints {\n  textarea: Omit<Endpoint, 'root'>\n  upload: Omit<Endpoint, 'root'>\n}\n\nexport type ActionMenuItems =\n  | 'Compose'\n  | 'Expand'\n  | 'Proofread'\n  | 'Rephrase'\n  | 'Settings'\n  | 'Simplify'\n  | 'Summarize'\n  | 'Tone'\n  | 'Translate'\n\nexport type ActionPromptOptions = {\n  layout?: string\n  locale?: string\n  prompt?: string\n  systemPrompt?: string\n}\n\nexport type ActionPrompt = {\n  layout?: (options?: ActionPromptOptions) => string\n  name: ActionMenuItems\n  system: (options: ActionPromptOptions) => string\n}\n\nexport type SeedPromptOptions = {\n  fieldLabel: string\n  fieldSchemaPaths: Record<string, any>\n  fieldType: string\n  path: string\n}\n\nexport type SeedPromptData = Omit<TypedCollection[typeof PLUGIN_INSTRUCTIONS_TABLE], 'createdAt' | 'id' | 'updatedAt'>\n\nexport type SeedPromptResult = {\n  data?: SeedPromptData\n  prompt: string\n  system: string\n} | {\n  data?: SeedPromptData\n} | false | undefined | void\n\nexport type SeedPromptFunction = (options: SeedPromptOptions) => Promise<SeedPromptResult> | SeedPromptResult\n\nexport type ActionMenuEvents =\n  | 'onCompose'\n  | 'onExpand'\n  | 'onProofread'\n  | 'onRephrase'\n  | 'onSettings'\n  | 'onSimplify'\n  | 'onSummarize'\n  | 'onTone'\n  | 'onTranslate'\n\nexport type UseMenuEvents = {\n  [key in ActionMenuEvents]?: (data?: unknown) => void\n}\n\nexport type UseMenuOptions = {\n  isConfigAllowed: boolean\n}\n\nexport type BaseItemProps<T = any> = {\n  children?: React.ReactNode\n  disabled?: boolean\n  hideIcon?: boolean\n  isActive?: boolean\n  isMenu?: boolean\n  onClick: (data?: unknown) => void\n  onMouseEnter?: MouseEventHandler<T> | undefined\n  onMouseLeave?: MouseEventHandler<T> | undefined\n  style?: CSSProperties | undefined\n  title?: string\n}\n\nexport type ImageReference = {\n  data: Blob\n  name: string\n  size: number\n  type: string\n  url: string\n}\n\nexport type GenerateImageParams = {\n  images?: ImageReference[]\n  size?: ImageGenerateParams['size']\n  style?: ImageGenerateParams['style']\n  version?: ImageGenerateParams['model']\n}\n\nexport type SerializedPromptField = {\n  collections?: (CollectionSlug)[]\n  name: string\n}\n\nexport type PromptFieldGetterContext = {\n  collection: CollectionSlug\n  type: string\n}\n\nexport type PromptField = {\n  // If not provided, the value will be returned from the data object as-is\n  getter?: (data: object, ctx: PromptFieldGetterContext) => Promise<string> | string\n} & SerializedPromptField\n"],"names":[],"mappings":"AA4NA,WAGyB"}