{"version":3,"sources":["../../src/utilities/extractPromptAttachments.ts"],"sourcesContent":["import type { UserModelMessage } from \"ai\"\n\n// Converts prompt into messages, extracting images in the process\nexport function extractPromptAttachments(prompt: string): UserModelMessage[] {\n  // Regex to match absolute HTTPS URLs with image extensions\n  const imageUrlRegex = /https:\\/\\/\\S+\\.(?:png|jpe?g|webp)/gi\n  \n  const messages: UserModelMessage[] = []\n  const imageUrls: string[] = []\n  \n  // Find all image URLs in the prompt\n  let match\n  while ((match = imageUrlRegex.exec(prompt)) !== null) {\n    imageUrls.push(match[0])\n  }\n  \n  // Create image messages first\n  for (const imageUrl of imageUrls) {\n    messages.push({\n      content: [\n        {\n          type: 'image',\n          image: new URL(imageUrl)\n        }\n      ],\n      role: 'user'\n    })\n  }\n  \n  // Add the text prompt as a regular user message if there's any text left\n  messages.push({\n    content: prompt,\n    role: 'user'\n  })\n\n  return messages\n}"],"names":["extractPromptAttachments","prompt","imageUrlRegex","messages","imageUrls","match","exec","push","imageUrl","content","type","image","URL","role"],"mappings":"AAEA,kEAAkE;AAClE,OAAO,SAASA,yBAAyBC,MAAc;IACrD,2DAA2D;IAC3D,MAAMC,gBAAgB;IAEtB,MAAMC,WAA+B,EAAE;IACvC,MAAMC,YAAsB,EAAE;IAE9B,oCAAoC;IACpC,IAAIC;IACJ,MAAO,AAACA,CAAAA,QAAQH,cAAcI,IAAI,CAACL,OAAM,MAAO,KAAM;QACpDG,UAAUG,IAAI,CAACF,KAAK,CAAC,EAAE;IACzB;IAEA,8BAA8B;IAC9B,KAAK,MAAMG,YAAYJ,UAAW;QAChCD,SAASI,IAAI,CAAC;YACZE,SAAS;gBACP;oBACEC,MAAM;oBACNC,OAAO,IAAIC,IAAIJ;gBACjB;aACD;YACDK,MAAM;QACR;IACF;IAEA,yEAAyE;IACzEV,SAASI,IAAI,CAAC;QACZE,SAASR;QACTY,MAAM;IACR;IAEA,OAAOV;AACT"}