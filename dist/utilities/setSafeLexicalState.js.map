{"version":3,"sources":["../../src/utilities/setSafeLexicalState.ts"],"sourcesContent":["import { LexicalEditor } from 'lexical'\n\nimport { $getRoot } from 'lexical'\n\ntype EditorAction = 'update' | 'replace'\n\nexport const setSafeLexicalState = (\n  state,\n  editorInstance: LexicalEditor,\n  action: EditorAction = 'replace',\n) => {\n  try {\n    const editorState = editorInstance.parseEditorState(state)\n    if (editorState.isEmpty()) return\n\n    editorInstance.update(\n      () => {\n        const root = $getRoot()\n        root.clear() //TODO: this is hack to prevent reconciliation error - find a way\n        editorInstance.setEditorState(editorState)\n      },\n      {\n        discrete: true,\n      },\n    )\n  } catch (e) {\n    // console.error('Error setting object:', e)\n    // setValue(object) //TODO: This breaks the editor find a better way to handle objects that are not valid\n  }\n}\n"],"names":["$getRoot","setSafeLexicalState","state","editorInstance","action","editorState","parseEditorState","isEmpty","update","root","clear","setEditorState","discrete","e"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,UAAS;AAIlC,OAAO,MAAMC,sBAAsB,CACjCC,OACAC,gBACAC,SAAuB,SAAS;IAEhC,IAAI;QACF,MAAMC,cAAcF,eAAeG,gBAAgB,CAACJ;QACpD,IAAIG,YAAYE,OAAO,IAAI;QAE3BJ,eAAeK,MAAM,CACnB;YACE,MAAMC,OAAOT;YACbS,KAAKC,KAAK,GAAG,iEAAiE;;YAC9EP,eAAeQ,cAAc,CAACN;QAChC,GACA;YACEO,UAAU;QACZ;IAEJ,EAAE,OAAOC,GAAG;IACV,4CAA4C;IAC5C,yGAAyG;IAC3G;AACF,EAAC"}