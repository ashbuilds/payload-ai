{"version":3,"sources":["../../src/utilities/extractImageData.ts"],"sourcesContent":["type ImageData = {\n  image: { name: string; type: string; url: string }\n}[]\n\nexport function extractImageData(input: string): ImageData {\n  const regex = /(?:https?:)?\\/[\\w%\\-.,/]+\\.(png|jpe?g|webp)/gi\n  const matches = input.match(regex)\n\n  if (!matches) return []\n\n  return matches.map((url) => {\n    const decodedUrl = decodeURIComponent(url)\n    const parts = decodedUrl.split('/')\n    const filename = parts[parts.length - 1]\n    const name = filename.replace(/\\.(png|jpe?g|webp)$/i, '')\n    const typeMatch = filename.match(/\\.(png|jpe?g|webp)$/i)\n    const type = typeMatch ? typeMatch[1].toLowerCase() : 'unknown'\n\n    return {\n      image: {\n        name,\n        type,\n        url,\n      },\n    }\n  })\n}\n"],"names":["extractImageData","input","regex","matches","match","map","url","decodedUrl","decodeURIComponent","parts","split","filename","length","name","replace","typeMatch","type","toLowerCase","image"],"mappings":"AAIA,OAAO,SAASA,iBAAiBC,KAAa;IAC5C,MAAMC,QAAQ;IACd,MAAMC,UAAUF,MAAMG,KAAK,CAACF;IAE5B,IAAI,CAACC,SAAS,OAAO,EAAE;IAEvB,OAAOA,QAAQE,GAAG,CAAC,CAACC;QAClB,MAAMC,aAAaC,mBAAmBF;QACtC,MAAMG,QAAQF,WAAWG,KAAK,CAAC;QAC/B,MAAMC,WAAWF,KAAK,CAACA,MAAMG,MAAM,GAAG,EAAE;QACxC,MAAMC,OAAOF,SAASG,OAAO,CAAC,wBAAwB;QACtD,MAAMC,YAAYJ,SAASP,KAAK,CAAC;QACjC,MAAMY,OAAOD,YAAYA,SAAS,CAAC,EAAE,CAACE,WAAW,KAAK;QAEtD,OAAO;YACLC,OAAO;gBACLL;gBACAG;gBACAV;YACF;QACF;IACF;AACF"}