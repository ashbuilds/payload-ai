{"version":3,"sources":["../../src/utilities/useGenerate.ts"],"sourcesContent":["import type { LexicalEditor } from 'lexical'\n\nimport { useField, useFieldProps, useLocale } from '@payloadcms/ui'\nimport { useCompletion, experimental_useObject as useObject } from 'ai/react'\nimport { $getRoot } from 'lexical'\nimport { useCallback, useEffect } from 'react'\n\nimport type { GenerateTextarea, MenuItems } from '../types.js'\n\nimport { DocumentSchema } from '../ai/RichTextSchema.js'\nimport { PLUGIN_API_ENDPOINT_GENERATE, PLUGIN_API_ENDPOINT_GENERATE_UPLOAD } from '../defaults.js'\nimport { useInstructions } from '../providers/InstructionsProvider/index.js'\nimport { useDotFields } from './useDotFields.js'\n\ntype UseGenerate = {\n  lexicalEditor: LexicalEditor\n}\n\nexport const useGenerate = ({ lexicalEditor }: UseGenerate) => {\n  const { type, path: pathFromContext, schemaPath } = useFieldProps()\n\n  //TODO: This should be dynamic, i think it was the part of component props but its not inside useFieldProps\n  const relationTo = 'media'\n\n  const { setValue } = useField<string>({\n    path: pathFromContext,\n  })\n\n  const { id: instructionId } = useInstructions({\n    path: schemaPath,\n  })\n\n  const localFromContext = useLocale()\n  const { getDotFields } = useDotFields()\n\n  const { object, submit } = useObject({\n    api: PLUGIN_API_ENDPOINT_GENERATE,\n    onError: (error) => {\n      console.error('Error generating object:', error)\n    },\n    schema: DocumentSchema,\n  })\n\n  const { complete, completion } = useCompletion({\n    api: PLUGIN_API_ENDPOINT_GENERATE,\n    onError: (error) => {\n      console.error('Error generating text:', error)\n    },\n    streamMode: 'stream-data',\n  })\n\n  useEffect(() => {\n    if (!object) return\n\n    // TODO: Improve error handling\n    requestAnimationFrame(() => {\n      try {\n        const editorState = lexicalEditor.parseEditorState(JSON.stringify(object))\n        if (editorState.isEmpty()) return\n\n        lexicalEditor.update(\n          () => {\n            const root = $getRoot()\n            root.clear() //TODO: this is hack to prevent reconciliation error - find a way\n            lexicalEditor.setEditorState(editorState)\n          },\n          {\n            discrete: true,\n          },\n        )\n      } catch (e) {\n        // setValue(object) //TODO: This breaks the editor find a better way to handle objects that are not valid\n      }\n    })\n  }, [object])\n\n  useEffect(() => {\n    if (!completion) return\n\n    requestAnimationFrame(() => {\n      setValue(completion)\n    })\n  }, [completion])\n\n  const streamObject = useCallback(\n    ({ action = 'Compose' }: { action: MenuItems }) => {\n      const { fields = {} } = getDotFields()\n      const options = {\n        action,\n        instructionId,\n      }\n\n      submit({\n        doc: fields,\n        locale: localFromContext?.code,\n        options,\n      })\n    },\n    [getDotFields, localFromContext?.code, instructionId],\n  )\n\n  const streamText = useCallback(\n    async ({ action = 'Compose' }: { action: MenuItems }) => {\n      const { fields = {} } = getDotFields()\n      const options = {\n        action,\n        instructionId,\n      }\n\n      await complete('', {\n        body: {\n          doc: fields,\n          locale: localFromContext?.code,\n          options,\n        },\n      })\n    },\n    [getDotFields, localFromContext?.code, instructionId],\n  )\n\n  const generateUpload = useCallback(async () => {\n    const { fields = {} } = getDotFields()\n    if (!Object.keys(fields).length) {\n      console.log('dotFields is empty')\n      return\n    }\n\n    return fetch(PLUGIN_API_ENDPOINT_GENERATE_UPLOAD, {\n      body: JSON.stringify({\n        doc: fields,\n        locale: localFromContext?.code,\n        options: {\n          instructionId,\n          uploadCollectionSlug: relationTo,\n        },\n      } satisfies Parameters<GenerateTextarea>[0]),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    })\n      .then(async (generatedImageResponse) => {\n        if (generatedImageResponse.ok) {\n          const { result: generatedImage } = await generatedImageResponse.json()\n          setValue(generatedImage?.id)\n        } else {\n          const { errors = [] } = await generatedImageResponse.json()\n          const errStr = errors.map((error) => error.message).join(', ')\n          throw new Error(errStr)\n        }\n        return generatedImageResponse\n      })\n      .catch((error) => {\n        console.error('Error generating image', error)\n      })\n  }, [getDotFields, localFromContext?.code, instructionId, relationTo, setValue])\n\n  return useCallback(\n    async (options?: { action: MenuItems }) => {\n      if (type === 'richText') {\n        return streamObject(options)\n      }\n\n      if (['text', 'textarea'].includes(type)) {\n        return streamText(options)\n      }\n      if (type === 'upload') {\n        return generateUpload()\n      }\n    },\n    [generateUpload, streamObject, streamText, type],\n  )\n}\n"],"names":["useField","useFieldProps","useLocale","useCompletion","experimental_useObject","useObject","$getRoot","useCallback","useEffect","DocumentSchema","PLUGIN_API_ENDPOINT_GENERATE","PLUGIN_API_ENDPOINT_GENERATE_UPLOAD","useInstructions","useDotFields","useGenerate","lexicalEditor","type","path","pathFromContext","schemaPath","relationTo","setValue","id","instructionId","localFromContext","getDotFields","object","submit","api","onError","error","console","schema","complete","completion","streamMode","requestAnimationFrame","editorState","parseEditorState","JSON","stringify","isEmpty","update","root","clear","setEditorState","discrete","e","streamObject","action","fields","options","doc","locale","code","streamText","body","generateUpload","Object","keys","length","log","fetch","uploadCollectionSlug","credentials","headers","method","then","generatedImageResponse","ok","result","generatedImage","json","errors","errStr","map","message","join","Error","catch","includes"],"mappings":"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"}