{"version":3,"sources":["../../../src/providers/InstructionsProvider/useInstructions.ts"],"sourcesContent":["import { InstructionsContext } from '@pawelmantur/payload-ai/client'\nimport { useDocumentInfo } from '@payloadcms/ui'\nimport { useContext, useEffect, useMemo, useState } from 'react'\n\nimport { PLUGIN_INSTRUCTIONS_TABLE } from '../../defaults.js'\nimport { handlebarsHelpers, handlebarsHelpersMap } from '../../libraries/handlebars/helpersMap.js'\n\n\nconst warnedOnceOnNoInstructionId = new Set<string>()\nconst warnOnceOnMissingInstructions = (path: string) => {\n  if (!warnedOnceOnNoInstructionId.has(path)) {\n    warnedOnceOnNoInstructionId.add(path)\n    // eslint-disable-next-line no-console\n    console.info(`[AI Plugin] There are no AI instructions for this field: ${path}. Enable \"generatePromptOnInit\" option to enable them.`)\n  }\n}\n\nexport const useInstructions = (\n  update: {\n    schemaPath?: unknown\n  } = {},\n) => {\n  const context = useContext(InstructionsContext)\n  const { collectionSlug } = useDocumentInfo()\n  const { activeCollection, hasInstructions, instructions, promptFields, setActiveCollection, debugging } = context\n\n  const [schemaPath, setSchemaPath] = useState(update.schemaPath as string)\n\n  useEffect(() => {\n    if (update.schemaPath !== schemaPath) {\n      setSchemaPath((update.schemaPath as string) ?? '')\n    }\n  }, [update.schemaPath])\n\n  useEffect(() => {\n    if (\n      activeCollection !== collectionSlug &&\n      collectionSlug !== PLUGIN_INSTRUCTIONS_TABLE &&\n      typeof setActiveCollection === 'function'\n    ) {\n      setActiveCollection(collectionSlug ?? '')\n    }\n  }, [activeCollection, collectionSlug, setActiveCollection])\n\n  const groupedFields = useMemo(() => {\n    const result: Record<string, string[]> = {}\n\n    for (const fullKey of Object.keys(instructions || {})) {\n      const [collection, ...pathParts] = fullKey.split('.')\n      const path = pathParts.join('.')\n      if (!result[collection]) {\n        result[collection] = []\n      }\n      result[collection].push(path)\n    }\n\n    return result\n  }, [instructions])\n\n  // Suggestions for prompt editor\n  const promptEditorSuggestions = useMemo(() => {\n    const activeFields = groupedFields[activeCollection as string] || []\n\n    const suggestions: string[] = []\n\n    activeFields.forEach((f) => {\n      const fieldKey = Object.keys(instructions).find((k) => k.endsWith(f))\n      const fieldInfo = fieldKey ? instructions[fieldKey] : undefined\n\n      if (!fieldInfo) {return}\n\n      if (fieldInfo.fieldType === 'upload') {\n        suggestions.push(`${f}.url`)\n        return\n      }\n\n      const helpers = handlebarsHelpers.filter(\n        (h) => (handlebarsHelpersMap as Record<string, any>)[h]?.field === fieldInfo.fieldType,\n      )\n\n      if (helpers.length) {\n        for (const helper of helpers) {\n          suggestions.push(`${helper} ${f}`)\n        }\n      } else {\n        suggestions.push(f)\n      }\n    }, [])\n\n    promptFields.forEach(({ name, collections }) => {\n      if (!activeCollection) {return}\n\n      if (!collections || collections.includes(activeCollection)) {\n        suggestions.push(name)\n      }\n    })\n\n    return suggestions\n  }, [groupedFields, activeCollection, instructions, promptFields])\n\n  const pathInstructions = instructions[schemaPath]\n\n  if (debugging && !pathInstructions && schemaPath && hasInstructions) {\n    warnOnceOnMissingInstructions(schemaPath)\n  }\n  \n  return {\n    ...context,\n    ...(pathInstructions || {}),\n    promptEditorSuggestions,\n  }\n}\n"],"names":["InstructionsContext","useDocumentInfo","useContext","useEffect","useMemo","useState","PLUGIN_INSTRUCTIONS_TABLE","handlebarsHelpers","handlebarsHelpersMap","warnedOnceOnNoInstructionId","Set","warnOnceOnMissingInstructions","path","has","add","console","info","useInstructions","update","context","collectionSlug","activeCollection","hasInstructions","instructions","promptFields","setActiveCollection","debugging","schemaPath","setSchemaPath","groupedFields","result","fullKey","Object","keys","collection","pathParts","split","join","push","promptEditorSuggestions","activeFields","suggestions","forEach","f","fieldKey","find","k","endsWith","fieldInfo","undefined","fieldType","helpers","filter","h","field","length","helper","name","collections","includes","pathInstructions"],"mappings":"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"}