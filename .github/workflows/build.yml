name: Build Plugin

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Build
      run: pnpm build

    - name: Commit, fetch, rebase, and push if changed
      # Skip auto-commit for PRs from forks (no write access)
      if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git add -f dist  # Force add the dist folder
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Automated build"
          # For PRs, push to the PR branch
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH=${{ github.head_ref }}
          else
            BRANCH=${{ github.ref_name }}
          fi
          git fetch origin $BRANCH
          git rebase origin/$BRANCH
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:$BRANCH
        fi
